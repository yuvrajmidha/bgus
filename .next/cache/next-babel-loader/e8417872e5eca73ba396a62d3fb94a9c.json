{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Box, Image, Avatar, AvatarBadge } from \"@chakra-ui/react\";\nimport { ICONSBACKGROUND } from \"./iconsbackground\";\nimport { ICONS } from \"./icons\";\n\nvar Shapes = /*#__PURE__*/function (_Component) {\n  _inherits(Shapes, _Component);\n\n  var _super = _createSuper(Shapes);\n\n  function Shapes(props) {\n    var _this;\n\n    _classCallCheck(this, Shapes);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      icon: ICONS,\n      iconbg: ICONSBACKGROUND\n    };\n    return _this;\n  }\n\n  _createClass(Shapes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //import the shapes in your component like \"import Shapes from '../components/Shapes/Shapes'\"\n      //iconnumber is to be passed as props - it defines what icon and background to put.\n      // here's an example \"<Shapes iconnumber = {1} backgroundnumber = {1}/>\"\n      var Icon = this.state.icon.filter(function (ico) {\n        return ico.id === _this2.props.iconnumber;\n      }).map(function (iconVar) {\n        return __jsx(\"div\", {\n          key: iconVar.id,\n          className: \"icon responsive\"\n        }, __jsx(\"img\", {\n          src: iconVar.image,\n          alt: \"icon image\"\n        }), console.log(iconVar));\n      });\n      var IconBG = this.state.iconbg.filter(function (icobg) {\n        return icobg.id === _this2.props.backgroundnumber;\n      }).map(function (iconBgVar) {\n        return __jsx(\"div\", {\n          key: iconBgVar.id,\n          className: \"icon-bg responsive\"\n        }, __jsx(\"img\", {\n          src: iconBgVar.image,\n          alt: \"icon background image\"\n        }), console.log(iconBgVar));\n      });\n      return __jsx(\"div\", {\n        className: \"shape-component container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row col-1\"\n      }, IconBG, Icon));\n    }\n  }]);\n\n  return Shapes;\n}(Component);\n\nexport default Shapes;","map":null,"metadata":{},"sourceType":"module"}