{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button, ModalContent, ModalHeader, ModalCloseButton, Spinner, Modal, ModalOverlay, Textarea, Radio, RadioGroup, FormHelperText, useDisclosure, Link, ModalBody } from \"@chakra-ui/react\";\nimport keys from '../../apiKeys';\nimport Toast from '../Toast/main';\nimport axios from \"axios\";\nimport { FaArrowLeft } from 'react-icons/fa';\n\nfunction FeedbackForm(props) {\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var _useState4 = useState(''),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState('4'),\n      rating = _useState5[0],\n      setRating = _useState5[1];\n\n  var _useState6 = useState(1000),\n      screenWidth = _useState6[0],\n      setScreenWidth = _useState6[1];\n\n  var form = {\n    name: name,\n    email: email,\n    description: description,\n    contactNumber: phone,\n    rating: rating\n  };\n\n  var _useState7 = useState(false),\n      isLoading = _useState7[0],\n      loadingState = _useState7[1];\n\n  var _useState8 = useState(''),\n      formResponse = _useState8[0],\n      setResponse = _useState8[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var fieldname = target.name;\n    var value = target.value;\n\n    switch (fieldname) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'rating':\n        setRating(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var refreshForm = function refreshForm(res) {\n    loadingState(false);\n    console.log(res);\n    setResponse(res);\n    setResponse('');\n    setName('');\n    setEmail('');\n    setDescription('');\n    setPhone('');\n    setRating('4');\n\n    if (res.status == 200) {\n      setTimeout(function () {\n        onClose();\n      }, 1000);\n    }\n  };\n\n  var formClose = function formClose() {\n    setResponse('');\n    setName('');\n    setEmail('');\n    setDescription('');\n    setPhone('');\n    setRating('4');\n    onClose();\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    loadingState(true);\n    axios.post('/api/feedback/submit', form).then(function (response) {\n      return refreshForm(response);\n    }, function (error) {\n      return refreshForm(error);\n    });\n  };\n\n  var updateWidth = function updateWidth() {\n    setScreenWidth(window.innerWidth);\n  };\n\n  React.useEffect(function () {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return function () {\n      return window.removeEventListener(\"resize\", updateWidth);\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    mx: 4,\n    variant: \"unstyled\",\n    onClick: onOpen,\n    colorScheme: \"white\"\n  }, \"Feedback\"), __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: formClose,\n    isCentered: screenWidth > 420 ? true : false,\n    scrollBehavior: screenWidth > 420 ? \"inside\" : \"outside\"\n  }, __jsx(ModalOverlay, null), __jsx(ModalContent, {\n    py: \"2\",\n    maxWidth: [\"430px\", \"400px\", \"600px\"],\n    maxHeight: screenWidth > 420 ? \"700px\" : \"\",\n    minHeight: screenWidth > 420 ? \"\" : \"100vh\",\n    mb: screenWidth <= 420 ? 0 : \"\",\n    mt: screenWidth <= 420 ? 0 : \"\"\n  }, __jsx(ModalBody, null, __jsx(ModalHeader, {\n    style: {\n      zIndex: \"3\",\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"white\"\n    }\n  }, __jsx(Button, {\n    verticalAlign: \"middle\",\n    leftIcon: __jsx(FaArrowLeft, null),\n    color: \"primary.500\",\n    variant: \"link\",\n    onClick: formClose\n  }), __jsx(\"span\", {\n    className: \"display5 mx-2\"\n  }, \"Send your feedback!\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"form\", {\n    className: \"feedback-form px-4\",\n    onSubmit: onSubmit\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"_redirect\",\n    value: \"false\"\n  }), __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true\n  }, __jsx(FormLabel, null, \"Rate your experience!\"), __jsx(RadioGroup, {\n    onChange: onChange,\n    name: \"rating\",\n    isInline: true,\n    defaultValue: form.rating,\n    spacing: 4\n  }, __jsx(Radio, {\n    size: \"lg\",\n    value: \"1\"\n  }, \"\\uD83D\\uDE41\"), __jsx(Radio, {\n    size: \"lg\",\n    value: \"2\"\n  }, \"\\uD83D\\uDE10\"), __jsx(Radio, {\n    size: \"lg\",\n    value: \"3\"\n  }, \"\\uD83D\\uDE42\"), __jsx(Radio, {\n    size: \"lg\",\n    value: \"4\"\n  }, \"\\uD83D\\uDE0A\")), __jsx(FormHelperText, null, \"We value your feedback\")), __jsx(FormControl, {\n    mt: \"6%\",\n    isRequired: true\n  }, __jsx(FormLabel, null, \"Describe your experience:\"), __jsx(Textarea, {\n    resize: \"vertical\",\n    variant: \"flushed\",\n    size: \"lg\",\n    name: \"description\",\n    value: form.description,\n    onChange: onChange\n  })), __jsx(FormControl, {\n    mt: \"10%\"\n  }, __jsx(FormLabel, {\n    htmlFor: \"name\"\n  }, \"Name:\"), __jsx(Input, {\n    variant: \"flushed\",\n    type: \"text\",\n    name: \"name\",\n    value: form.name,\n    onChange: onChange\n  })), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(FormControl, {\n    mt: \"14%\"\n  }, __jsx(FormLabel, {\n    htmlFor: \"email\"\n  }, \"Email:\"), __jsx(Input, {\n    variant: \"flushed\",\n    type: \"email\",\n    name: \"email\",\n    value: form.email,\n    onChange: onChange\n  }))), __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(FormControl, {\n    mt: \"14%\"\n  }, __jsx(FormLabel, {\n    htmlFor: \"phone\"\n  }, \"Contact No.\"), __jsx(Input, {\n    type: \"tel\",\n    pattern: \"[0-9]{10}\",\n    variant: \"flushed\",\n    name: \"phone\",\n    value: form.contactNumber,\n    onChange: onChange\n  })))), __jsx(\"div\", null, __jsx(Button, {\n    mt: 10,\n    mb: 8,\n    type: \"submit\",\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\"\n  }, \"Submit\", isLoading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"1s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"sm\"\n  }))))), formResponse && __jsx(Toast, {\n    response: formResponse\n  })))));\n}\n\nexport default FeedbackForm;","map":null,"metadata":{},"sourceType":"module"}