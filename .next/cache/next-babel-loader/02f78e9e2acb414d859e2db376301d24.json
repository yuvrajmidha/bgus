{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"title\", \"typeWriter_title\", \"titleStyle\", \"color\", \"align\", \"description\", \"containerWidth\", \"descriptionStyle\", \"endingButtonTitle\", \"endingButton\", \"slider\", \"endingButtonLink\", \"sliderOption\", \"gap\", \"rowDistance\", \"body\"];\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Box } from '@chakra-ui/react';\nimport Section from './Section';\nimport Title from './Title';\nimport Description from './Description';\nimport Row from './Row';\nimport Body from './Body';\nimport Link from 'next/link';\nimport Fade from \"react-reveal/Fade\";\nimport Typewriter from 'typewriter-effect';\n\nfunction RenderSection(_ref) {\n  var title = _ref.title,\n      typeWriter_title = _ref.typeWriter_title,\n      titleStyle = _ref.titleStyle,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"dark.500\" : _ref$color,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? \"center\" : _ref$align,\n      description = _ref.description,\n      _ref$containerWidth = _ref.containerWidth,\n      containerWidth = _ref$containerWidth === void 0 ? [\"100%\", \"100%\", \"720px\", \"960px\", \"1140px\"] : _ref$containerWidth,\n      descriptionStyle = _ref.descriptionStyle,\n      endingButtonTitle = _ref.endingButtonTitle,\n      endingButton = _ref.endingButton,\n      slider = _ref.slider,\n      endingButtonLink = _ref.endingButtonLink,\n      sliderOption = _ref.sliderOption,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 4 : _ref$gap,\n      _ref$rowDistance = _ref.rowDistance,\n      rowDistance = _ref$rowDistance === void 0 ? 0 : _ref$rowDistance,\n      body = _ref.body,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(React.Fragment, null, __jsx(Section, _extends({\n    containerWidth: containerWidth,\n    color: color,\n    align: align\n  }, props), title && __jsx(Title, titleStyle, title), typeWriter_title && __jsx(Title, titleStyle, __jsx(Box, {\n    justifyContent: align,\n    className: \"d-flex flex-lg-row flex-column text-center\"\n  }, __jsx(\"span\", null, typeWriter_title.before), __jsx(Typewriter, {\n    options: {\n      strings: typeWriter_title.typed,\n      autoStart: true,\n      loop: true\n    }\n  }), \"\\xA0\", typeWriter_title.after)), description && __jsx(Description, descriptionStyle, description), body && __jsx(Fade, {\n    duration: 500,\n    delay: 200,\n    cascade: true,\n    distance: \"5%\",\n    bottom: true\n  }, __jsx(Row, {\n    rowDistance: rowDistance\n  }, body && body.map(function (b, index) {\n    return __jsx(Body, _extends({\n      key: index,\n      gap: gap\n    }, b));\n  }))), endingButtonTitle && __jsx(Row, {\n    mt: \"2rem\"\n  }, __jsx(Link, {\n    href: \"/\" + endingButtonLink\n  }, __jsx(Button, endingButton, endingButtonTitle)))));\n}\n\nexport default RenderSection;","map":null,"metadata":{},"sourceType":"module"}