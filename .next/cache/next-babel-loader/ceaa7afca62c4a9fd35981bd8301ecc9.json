{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/Row.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@chakra-ui/react';\n\nfunction Row(_ref) {\n  let {\n    justify,\n    flexWrap = \"wrap\",\n    rowDistance\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"justify\", \"flexWrap\", \"rowDistance\"]);\n\n  return __jsx(Flex, _extends({\n    display: \"inline-flex\",\n    w: \"100%\",\n    mt: rowDistance,\n    flexWrap: flexWrap,\n    direction: props.direction,\n    justify: justify || \"center\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/Row.jsx"],"names":["React","Flex","Row","justify","flexWrap","rowDistance","props","direction"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,GAAT,OAAoE;AAAA,MAAvD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAQ,GAAG,MAAtB;AAA8BC,IAAAA;AAA9B,GAAuD;AAAA,MAATC,KAAS;;AAChE,SACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,aAAd;AAA4B,IAAA,CAAC,EAAC,MAA9B;AAAqC,IAAA,EAAE,EAAED,WAAzC;AAAsD,IAAA,QAAQ,EAAED,QAAhE;AAA0E,IAAA,SAAS,EAAEE,KAAK,CAACC,SAA3F;AAAsG,IAAA,OAAO,EAAEJ,OAAO,IAAI;AAA1H,KAAwIG,KAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAKH;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\r\nimport { Flex } from '@chakra-ui/react';\r\n\r\nfunction Row({ justify, flexWrap = \"wrap\", rowDistance, ...props }) {\r\n    return (\r\n        <Flex display=\"inline-flex\" w=\"100%\" mt={rowDistance} flexWrap={flexWrap} direction={props.direction} justify={justify || \"center\"} {...props}>\r\n\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default Row;"]},"metadata":{},"sourceType":"module"}