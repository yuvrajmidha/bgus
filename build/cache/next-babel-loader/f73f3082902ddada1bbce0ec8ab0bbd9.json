{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"image\", \"icon\", \"size\", \"title\", \"iconColor\", \"color\", \"svg\", \"titleSize\", \"description\", \"align\", \"textOpacity\", \"titleFont\", \"titleColor\"];\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex, Icon, Image, Heading, Text, Box } from '@chakra-ui/react';\nimport { ReactSVG } from 'react-svg';\nimport SVG from '../../components/svg/SVG';\n\nfunction Feature(_ref) {\n  var image = _ref.image,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"48px\" : _ref$size,\n      title = _ref.title,\n      _ref$iconColor = _ref.iconColor,\n      iconColor = _ref$iconColor === void 0 ? \"dark.500\" : _ref$iconColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"dark.500\" : _ref$color,\n      svg = _ref.svg,\n      _ref$titleSize = _ref.titleSize,\n      titleSize = _ref$titleSize === void 0 ? \"lg\" : _ref$titleSize,\n      description = _ref.description,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? \"center\" : _ref$align,\n      textOpacity = _ref.textOpacity,\n      titleFont = _ref.titleFont,\n      titleColor = _ref.titleColor,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Flex, _extends({\n    direction: \"column\",\n    align: align\n  }, props), svg && __jsx(SVG, {\n    src: svg,\n    color: iconColor,\n    size: size\n  }), image && __jsx(Image, {\n    alt: \"\",\n    src: image,\n    objectFit: \"cover\",\n    h: size,\n    w: size\n  }), icon && __jsx(Box, {\n    as: icon,\n    size: size\n  }), __jsx(Heading, {\n    fontFamily: titleFont,\n    fontWeight: \"600\",\n    mt: 4,\n    size: titleSize,\n    textAlign: align\n  }, title), description && __jsx(Text, {\n    opacity: textOpacity,\n    mt: 4,\n    textAlign: \"justify\",\n    style: {\n      textAlignLast: align\n    }\n  }, description));\n}\n\nexport default Feature;","map":null,"metadata":{},"sourceType":"module"}