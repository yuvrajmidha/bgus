{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Button, Collapse, Slider, SliderThumb, SliderTrack, SliderFilledTrack, FormLabel, Switch, Flex, RadioGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Popover, PopoverBody, PopoverArrow, PopoverContent, PopoverTrigger, PopoverHeader } from \"@chakra-ui/react\";\nimport { PricingCard, PricingQuote } from \"../../components/cards/PricingCard\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaQuestion } from \"react-icons/fa\";\nconst CustomRadio = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    isChecked,\n    isDisabled,\n    value\n  } = props,\n        rest = _objectWithoutProperties(props, [\"isChecked\", \"isDisabled\", \"value\"]);\n\n  return __jsx(Button, _extends({\n    className: \"my-1\",\n    fontSize: [\"13px\", \"14px\", \"16px\"],\n    ref: ref,\n    variant: isChecked ? \"solid\" : \"outline\",\n    colorScheme: isChecked ? \"primary\" : \"gray.300\",\n    \"aria-checked\": isChecked,\n    role: \"radio\",\n    isDisabled: isDisabled\n  }, rest));\n});\n\nfunction ContactCenterPricing(props) {\n  const features = [\"Includes 5 CSQ\", \"Connectivity to end customer*\", \"Complete Call Recording\", \"On-Demand Call Recording\", \"Fully Managed Service\"];\n\n  const verifyNotEmpty = (x, text) => x > 0 ? \", \" + x + \" \" + text : \"\";\n\n  const [planIndex, setPlanIndex] = React.useState(1);\n  const [planName, setPlanName] = React.useState(\"\");\n  const [RDSType, setRDSType] = React.useState(\"\");\n  const [wfm, setWfm] = React.useState(0);\n  const [complianceQM, setComplianceQM] = React.useState(0);\n  const [advancedQM, setAdvancedQM] = React.useState(0);\n  const [failOverNode, setFailOverNode] = React.useState(false);\n\n  const handleFailOverNode = failOverNode => failOverNode ? \",Add Fail-Over Node\" : \"\";\n\n  const [value, setValue] = React.useState(1);\n\n  const handleChange = value => setValue(value);\n\n  const [tbSpace, setTbSpace] = React.useState(1);\n\n  const handleTbSpace = tbSpace => setTbSpace(tbSpace);\n\n  const [show, setShow] = React.useState(false);\n\n  const openControls = () => {\n    setShow(true);\n    window.scrollTo(0, document.getElementById(\"collapse-1\").offsetTop - 100);\n  };\n\n  return __jsx(\"div\", {\n    id: \"pricing\",\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row no-gutters px-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Standard\",\n    icon: \"/assets/images/icons/theme/origami.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: () => {\n      openControls();\n      setPlanName(\"CAGENT Standard Plan\");\n      setPlanIndex(1);\n      setWfm(0);\n      setAdvancedQM(0);\n      setComplianceQM(0);\n    }\n  }, \"View Options\"))), __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Professional\",\n    icon: \"/assets/images/icons/theme/paper-plane.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: () => {\n      openControls();\n      setPlanName(\"CAGENT Professional Plan\");\n      setPlanIndex(2);\n      setRDSType(\"\");\n      setValue(0);\n      setTbSpace(0);\n      setFailOverNode(false);\n    }\n  }, \"View Options\"))), __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Business\",\n    icon: \"/assets/images/icons/theme/airplane.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: () => {\n      openControls();\n      setPlanName(\"CAGENT Business Plan\");\n      setPlanIndex(3);\n      setRDSType(\"\");\n      setValue(0);\n      setTbSpace(0);\n      setFailOverNode(false);\n    }\n  }, \"View Options\")))), __jsx(\"div\", null, __jsx(\"div\", {\n    id: \"collapse-1\"\n  }, __jsx(Collapse, {\n    className: \"px-lg-5\",\n    mt: 6,\n    in: show\n  }, __jsx(\"div\", {\n    className: \"px-4 py-5 border\"\n  }, __jsx(\"div\", {\n    className: \"display5 text-center\"\n  }, planName), __jsx(\"div\", {\n    className: \"row justify-content-between px-3\"\n  }, planIndex === 1 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Additional CSQ\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    max: 30,\n    defaultValue: 1,\n    value: value,\n    onChange: handleChange\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: value\n  }))), __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-2\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Choose a type\"), __jsx(RadioGroup, {\n    onChange: value => setRDSType(value),\n    mt: 4,\n    isInline: true\n  }, __jsx(CustomRadio, {\n    value: \",RDS SERVER WITH CAD\"\n  }, \"RDS SERVER WITH CAD\"), __jsx(CustomRadio, {\n    value: \",RDS SERVER WITH TOOLS\"\n  }, \"RDS SERVER WITH TOOLS\"), __jsx(CustomRadio, {\n    value: \",RDS SERVER CALL RECORDING\"\n  }, \"RDS SERVER CALL RECORDING\"))), __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"TB Space\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    max: 30,\n    defaultValue: 1,\n    value: tbSpace,\n    onChange: handleTbSpace\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: tbSpace\n  }))), __jsx(\"div\", {\n    className: \"my-1 col-lg-10 offset-lg-1 mt-3 d-flex justify-content-between\"\n  }, __jsx(Flex, {\n    py: \"12px\",\n    justify: \"left\",\n    width: \"100%\",\n    align: \"center\"\n  }, __jsx(Switch, {\n    onChange: e => {\n      setFailOverNode(e.target.checked);\n    },\n    color: \"primary\",\n    mb: 0,\n    id: \"failOverNode\"\n  }), __jsx(FormLabel, {\n    mb: 0,\n    ml: \"12px\",\n    htmlFor: \"fail-over node\"\n  }, \"Add Fail-Over Node\")))), (planIndex === 2 || planIndex === 3) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"my-1 col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"WFM\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    defaultValue: 0,\n    max: \"64\",\n    value: wfm,\n    onChange: setWfm\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: wfm\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 text-center justify-content-center text-secondary\"\n  }, \"(The sum value of Advance QM and Compliance QM cannot be greater than WFM)\"), __jsx(\"div\", {\n    className: \"my-1 col-lg-4 offset-lg-1 mt-4 pl-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, \" \", __jsx(\"div\", {\n    className: \"h6\"\n  }, \"ADVANCED QM\"), \" \", __jsx(Popover, {\n    usePortal: true,\n    trigger: \"hover\"\n  }, __jsx(PopoverTrigger, null, __jsx(FaQuestion, {\n    className: \"ml-2 pb-1 mb-2\",\n    size: \"28px\",\n    color: \"primary.500\"\n  })), __jsx(PopoverContent, {\n    zIndex: 4\n  }, __jsx(PopoverArrow, null), __jsx(PopoverHeader, {\n    className: \"h6\"\n  }, \"Advanced QM\"), __jsx(PopoverBody, null, \"Advanced Quality Management solution gives you the tools to continuously measure and monitor agent performance, assess the quality and depth of your customer interactions, and drive constant improvement. In essence, an effective contact center quality management program is directly connected to the success of your business.\"))), \" \"), __jsx(NumberInput, {\n    maxWidth: \"200px\",\n    min: 0,\n    max: wfm - complianceQM,\n    value: advancedQM,\n    onChange: value => {\n      value <= wfm - complianceQM ? setAdvancedQM(value) : setAdvancedQM(wfm - complianceQM);\n    }\n  }, __jsx(NumberInputField, {\n    className: \"bg-light\"\n  }), __jsx(NumberInputStepper, null, __jsx(NumberIncrementStepper, null), __jsx(NumberDecrementStepper, null)))), __jsx(\"div\", {\n    className: \"my-1 col-lg-4 mt-4 pr-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, \" \", __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Compliance QM\"), \" \", __jsx(Popover, {\n    usePortal: true,\n    trigger: \"hover\"\n  }, __jsx(PopoverTrigger, null, __jsx(FaQuestion, {\n    className: \"ml-2 pb-1 mb-2\",\n    size: \"28px\",\n    color: \"primary.500\"\n  })), __jsx(PopoverContent, {\n    zIndex: 4\n  }, __jsx(PopoverArrow, null), __jsx(PopoverHeader, {\n    className: \"h6\"\n  }, \"Compliance QM\"), __jsx(PopoverBody, null, \"Quality Management or Monitoring combined automatically scored calls via speech analytics; reconfigured QM evaluation; agent self-evaluation; and direct customer feedback. Customers don\\u2019t want a \\u201Cmanaged\\u201D experience\\u2014they want a genuine experience and to speak to real people with real personalities. Call quality monitoring is all about refining agent behaviour and aligning it with business goals.\"))), \" \"), __jsx(NumberInput, {\n    maxWidth: \"200px\",\n    min: 0,\n    max: wfm - advancedQM,\n    value: complianceQM,\n    onChange: value => {\n      value <= wfm - advancedQM ? setComplianceQM(value) : setComplianceQM(wfm - advancedQM);\n    }\n  }, __jsx(NumberInputField, {\n    className: \"bg-light\"\n  }), __jsx(NumberInputStepper, null, __jsx(NumberIncrementStepper, null), __jsx(NumberDecrementStepper, null))))), __jsx(\"div\", {\n    className: \"col-lg-12 mt-5 d-flex justify-content-center\"\n  }, __jsx(PricingQuote, {\n    serviceName: \"Contact Center As A Service\",\n    serviceDescription: `${planName}${verifyNotEmpty(value, \"Additional CSQ\")}${RDSType}${verifyNotEmpty(tbSpace, \"TB Space\")}${verifyNotEmpty(wfm, \"WFM\")}${verifyNotEmpty(advancedQM, \"Advanced QM\")}${verifyNotEmpty(complianceQM, \"Compliance QM\")}${handleFailOverNode(failOverNode)}`,\n    button: true\n  }))))))));\n}\n\nexport default ContactCenterPricing;","map":null,"metadata":{},"sourceType":"module"}