{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/components/GetaQuote/main.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useDisclosure, FormControl, FormLabel, Input, Button, ModalContent, ModalHeader, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverFooter, PopoverArrow, PopoverCloseButton, ModalCloseButton, Spinner, Modal, ModalOverlay, Textarea, ModalBody, Box, Alert, AlertIcon, Tooltip, Icon } from \"@chakra-ui/react\";\nimport keys from '../../apiKeys';\nimport Toast from '../Toast/main';\nimport axios from \"axios\";\nimport Description from '../../pageBuilder/Description';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nfunction GetaQuoteForm(props) {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  const {\n    0: screenWidth,\n    1: setScreenWidth\n  } = useState(1000);\n  let form = {\n    name: name,\n    email: email,\n    description: message,\n    contactNumber: phone,\n    serviceName: props.serviceName,\n    serviceString: props.serviceDescription\n  };\n  const {\n    0: isLoading,\n    1: loadingState\n  } = useState(false);\n  const {\n    0: formResponse,\n    1: setResponse\n  } = useState('');\n\n  const onChange = event => {\n    const target = event.target;\n    const fieldname = target.name;\n    const value = target.value;\n\n    switch (fieldname) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'message':\n        setMessage(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const refreshForm = res => {\n    loadingState(false);\n    console.log(res);\n    setResponse(res);\n    setResponse('');\n    setName('');\n    setEmail('');\n    setMessage('');\n    setPhone('');\n\n    if (res.status == 200) {\n      setTimeout(() => {\n        onClose();\n      }, 1000);\n    }\n  };\n\n  const formClose = () => {\n    setResponse('');\n    setName('');\n    setEmail('');\n    setMessage('');\n    setPhone('');\n    onClose();\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    loadingState(true);\n    axios.post('/api/service/submit', form).then(response => refreshForm(response), error => refreshForm(error));\n  };\n\n  var description = props.serviceDescription.split(',');\n\n  const updateWidth = () => {\n    setScreenWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  return __jsx(React.Fragment, null, !props.button && __jsx(\"div\", {\n    className: \"mt-3 w-100 px-3 d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, props.title && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 27\n    }\n  }, props.title), __jsx(\"a\", {\n    className: \"link\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Get a quote\")), props.button && __jsx(Button, {\n    size: \"lg\",\n    className: props.buttonStyle,\n    variant: \"outline\",\n    colorScheme: \"primary\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, props.children || \"Get a Quote\"), __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: formClose,\n    isCentered: screenWidth > 420 ? true : false,\n    scrollBehavior: screenWidth > 420 ? \"inside\" : \"outside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), __jsx(ModalContent, {\n    maxWidth: [\"400px\", \"400px\", \"600px\"],\n    maxHeight: screenWidth > 420 ? \"800px\" : \"\",\n    minHeight: screenWidth > 420 ? \"\" : \"100vh\",\n    mb: screenWidth <= 420 ? 0 : \"\",\n    mt: screenWidth <= 420 ? 0 : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(ModalHeader, {\n    style: {\n      zIndex: \"3\",\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(Button, {\n    verticalAlign: \"middle\",\n    leftIcon: __jsx(FaArrowLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 146\n      }\n    }),\n    color: \"primary.500\",\n    variant: \"link\",\n    onClick: formClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 105\n    }\n  }), __jsx(\"span\", {\n    className: \"display5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 226\n    }\n  }, props.serviceName)), __jsx(\"div\", {\n    className: \"d-flex flex-wrap px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, description.map((service, index) => {\n    return __jsx(\"div\", {\n      className: \"rounded-8 hover-effect bg-light m-2 py-2 px-3\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, service);\n  })), __jsx(Box, {\n    mb: 4,\n    className: \"container contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(Popover, {\n    trigger: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, __jsx(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    colorScheme: \"primary\",\n    mb: 6,\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Whats this?\")), __jsx(PopoverContent, {\n    zIndex: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, __jsx(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"We're working on automating our sign-up process to make it easier for you to buy and use our services. In the meantime, please fill out and submit the form. We will have one of our qualified account managers contact you about system availability for the configuration you desire. We look forward to speaking with you.\"))), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"_redirect\",\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"serviceName\",\n    value: form.serviceName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"serviceDescription\",\n    value: form.serviceString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, \"Name:\"), __jsx(Input, {\n    variant: \"flushed\",\n    type: \"text\",\n    name: \"name\",\n    value: form.name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    mt: \"14%\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, \"Email:\"), __jsx(Input, {\n    variant: \"flushed\",\n    type: \"email\",\n    name: \"email\",\n    value: form.email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    mt: \"14%\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, \"Contact No.\"), __jsx(Input, {\n    type: \"tel\",\n    pattern: \"[0-9]{10}\",\n    variant: \"flushed\",\n    name: \"phone\",\n    value: form.contactNumber,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  })))), __jsx(FormControl, {\n    mt: \"9%\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"Details:\"), __jsx(Textarea, {\n    resize: \"vertical\",\n    variant: \"flushed\",\n    size: \"lg\",\n    name: \"message\",\n    value: form.description,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    mt: 10,\n    type: \"submit\",\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"Submit\", isLoading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"1s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 40\n    }\n  }))))), formResponse && __jsx(Toast, {\n    response: formResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 30\n    }\n  })))));\n}\n\n_s(GetaQuoteForm, \"bN67cMHu6dvvG8CR7W1n2yuCZEI=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = GetaQuoteForm;\nexport default GetaQuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetaQuoteForm\");","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/components/GetaQuote/main.jsx"],"names":["React","useState","useDisclosure","FormControl","FormLabel","Input","Button","ModalContent","ModalHeader","Popover","PopoverTrigger","PopoverContent","PopoverHeader","PopoverBody","PopoverFooter","PopoverArrow","PopoverCloseButton","ModalCloseButton","Spinner","Modal","ModalOverlay","Textarea","ModalBody","Box","Alert","AlertIcon","Tooltip","Icon","keys","Toast","axios","Description","FaArrowLeft","GetaQuoteForm","props","isOpen","onOpen","onClose","name","setName","email","setEmail","message","setMessage","phone","setPhone","screenWidth","setScreenWidth","form","description","contactNumber","serviceName","serviceString","serviceDescription","isLoading","loadingState","formResponse","setResponse","onChange","event","target","fieldname","value","refreshForm","res","console","log","status","setTimeout","formClose","onSubmit","preventDefault","post","then","response","error","split","updateWidth","window","innerWidth","useEffect","addEventListener","removeEventListener","button","title","buttonStyle","children","zIndex","position","top","backgroundColor","map","service","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  useDisclosure, FormControl, FormLabel, Input, Button, ModalContent, ModalHeader, \r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  ModalCloseButton, Spinner, Modal, ModalOverlay, Textarea, ModalBody, Box, Alert, AlertIcon, Tooltip, Icon\r\n} from \"@chakra-ui/react\";\r\nimport keys from '../../apiKeys';\r\nimport Toast from '../Toast/main';\r\nimport axios from \"axios\";\r\nimport Description from '../../pageBuilder/Description';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nfunction GetaQuoteForm(props) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [screenWidth, setScreenWidth] = useState(1000);\r\n  let form = {\r\n    name: name,\r\n    email: email,\r\n    description: message,\r\n    contactNumber: phone,\r\n    serviceName: props.serviceName,\r\n    serviceString: props.serviceDescription\r\n  }\r\n  const [isLoading, loadingState] = useState(false);\r\n  const [formResponse, setResponse] = useState('');\r\n  const onChange = (event) => {\r\n    const target = event.target\r\n    const fieldname = target.name\r\n    const value = target.value\r\n    switch (fieldname) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'message':\r\n        setMessage(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const refreshForm = (res) => {\r\n    loadingState(false)\r\n    console.log(res);\r\n    setResponse(res);\r\n    setResponse('');\r\n    setName('');\r\n    setEmail('');\r\n    setMessage('');\r\n    setPhone('');\r\n    if (res.status == 200) {\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 1000);\r\n    }\r\n  }\r\n  const formClose = () => {\r\n    setResponse('');\r\n    setName('');\r\n    setEmail('');\r\n    setMessage('');\r\n    setPhone('');\r\n    onClose();\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    loadingState(true);\r\n    axios.post('/api/service/submit', form)\r\n      .then((response) => refreshForm(response), (error) => refreshForm(error))\r\n  }\r\n  var description = props.serviceDescription.split(',');\r\n  const updateWidth = () => {\r\n    setScreenWidth(window.innerWidth);\r\n  };\r\n  React.useEffect(() => {\r\n    updateWidth();\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  });\r\n  return (\r\n    <>\r\n      {!props.button && (\r\n        <div className=\"mt-3 w-100 px-3 d-flex justify-content-between\">\r\n          {props.title && <p>{props.title}</p>}\r\n          <a className=\"link\" onClick={onOpen}>\r\n            Get a quote\r\n          </a>\r\n        </div>\r\n      )}\r\n      {props.button && (\r\n        <Button\r\n          size=\"lg\"\r\n          className={props.buttonStyle}\r\n          variant=\"outline\"\r\n          colorScheme=\"primary\"\r\n          onClick={onOpen}\r\n        >\r\n          {props.children || \"Get a Quote\"}\r\n        </Button>\r\n      )}\r\n      <Modal isOpen={isOpen} onClose={formClose} isCentered={screenWidth > 420 ? true : false} scrollBehavior={screenWidth > 420 ? \"inside\" : \"outside\"}>\r\n        <ModalOverlay />\r\n        <ModalContent maxWidth={[\"400px\", \"400px\", \"600px\"]} maxHeight={screenWidth > 420 ? \"800px\" : \"\"} minHeight={screenWidth > 420 ? \"\" : \"100vh\"} mb={screenWidth <= 420 ? 0 : \"\"} mt={screenWidth <= 420 ? 0 : \"\"}>\r\n          <ModalBody>\r\n            <ModalHeader style={{ zIndex: \"3\", position: \"sticky\", top: 0, backgroundColor: \"white\" }}> <Button verticalAlign=\"middle\" leftIcon={<FaArrowLeft/>} color=\"primary.500\" variant=\"link\" onClick={formClose}></Button><span className=\"display5\">{props.serviceName}\r\n            </span></ModalHeader>\r\n            <div className=\"d-flex flex-wrap px-3\">{description.map((service, index) => {\r\n              return (\r\n                <div className=\"rounded-8 hover-effect bg-light m-2 py-2 px-3\" key={index}>{service}</div>\r\n              )\r\n            })}</div>\r\n            \r\n            <Box mb={4} className=\"container contact-form\">\r\n              <Popover trigger=\"hover\">\r\n                <PopoverTrigger>\r\n                  <Button variant=\"link\" colorScheme=\"primary\" mb={6} mt={2}>Whats this?</Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent zIndex={4}>\r\n                  <PopoverBody>We're working on automating our sign-up process to make it easier for you to buy and use our services. In the meantime, please fill out and submit the form. We will have one of our qualified account managers contact you about system availability for the configuration you desire. We look forward to speaking with you.</PopoverBody>\r\n                </PopoverContent>\r\n              </Popover>\r\n              <form onSubmit={onSubmit}>\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"_redirect\"\r\n                  value=\"false\"\r\n                />\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"serviceName\"\r\n                  value={form.serviceName}\r\n                />\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"serviceDescription\"\r\n                  value={form.serviceString}\r\n                />\r\n                <FormControl isRequired>\r\n                  <FormLabel htmlFor=\"name\">Name:</FormLabel>\r\n                  <Input\r\n                    variant=\"flushed\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={form.name}\r\n                    onChange={onChange}\r\n                  />\r\n                </FormControl>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <FormControl mt={\"14%\"} isRequired>\r\n                      <FormLabel htmlFor=\"email\">Email:</FormLabel>\r\n                      <Input\r\n                        variant=\"flushed\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={onChange}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <FormControl mt={\"14%\"} isRequired>\r\n                      <FormLabel htmlFor=\"phone\">Contact No.</FormLabel>\r\n                      <Input\r\n                        type=\"tel\"\r\n                        pattern=\"[0-9]{10}\"\r\n                        variant=\"flushed\"\r\n                        name=\"phone\"\r\n                        value={form.contactNumber}\r\n                        onChange={onChange}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                <FormControl mt={\"9%\"} isRequired>\r\n                  <FormLabel>Details:</FormLabel>\r\n                  <Textarea\r\n                    resize={\"vertical\"}\r\n                    variant=\"flushed\"\r\n                    size=\"lg\"\r\n                    name=\"message\"\r\n                    value={form.description}\r\n                    onChange={onChange}\r\n                  />\r\n                </FormControl>\r\n                <div >\r\n                  <Button\r\n                    mt={10}\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    colorScheme=\"primary\"\r\n                    className=\"primary-btn\"\r\n                  >Submit{isLoading && <Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"1s\"\r\n                    emptyColor=\"gray.200\"\r\n                    color=\"blue.500\"\r\n                    size=\"sm\"\r\n                  />}</Button>\r\n                </div>\r\n              </form>\r\n            </Box>\r\n            {formResponse && <Toast response={formResponse} />}\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default GetaQuoteForm;"]},"metadata":{},"sourceType":"module"}