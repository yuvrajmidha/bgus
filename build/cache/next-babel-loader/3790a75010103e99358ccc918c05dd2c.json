{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { Box, Input, InputGroup, Text, Heading, InputLeftElement, Icon } from \"@chakra-ui/react\";\nimport Fade from \"react-reveal/Fade\";\nimport { dynamicSearch } from \"../../public/assets/js/searchFunctions\";\nimport services from \"../database/services\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { SearchIcon } from '@chakra-ui/icons';\nconst servicesArray = Object.entries(services);\n\nfunction search(props) {\n  const router = useRouter();\n  var {\n    search\n  } = router.query;\n  const [text, setText] = React.useState(\"\");\n\n  const handleValue = e => {\n    setText(e.target.value);\n    setData(dynamicSearch(e.target.value));\n  };\n\n  const [data, setData] = React.useState({\n    pages: [],\n    services: [],\n    articles: []\n  }); //Set text and data\n\n  useEffect(() => {\n    if (search) {\n      setText(search);\n      setData(dynamicSearch(search));\n    }\n  }, [search]);\n  return __jsx(\"div\", {\n    className: \"newsroom\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Search | BG Unified Solutions\")), __jsx(Fade, {\n    duration: 500,\n    distance: \"10%\",\n    top: true\n  }, __jsx(Box, {\n    mt: 30,\n    mb: 2,\n    pb: \"10px\",\n    pt: [\"30px\", \"50px\", \"72px\"]\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-10 offset-xl-1\"\n  }, __jsx(InputGroup, null, __jsx(InputLeftElement, {\n    p: [8, 12],\n    children: __jsx(SearchIcon, {\n      color: \"gray.300\",\n      h: [\"20px\", \"24px\"],\n      w: [\"20px\", \"24px\"]\n    })\n  }), __jsx(Input, {\n    type: \"text\",\n    py: [8, 12],\n    onChange: handleValue,\n    value: text,\n    variant: \"flushed\",\n    focusBorderColor: \"primary.500\",\n    color: \"primary.500\",\n    fontWeight: \"700\",\n    fontSize: [\"2xl\", \"32px\"],\n    pl: [16, 24],\n    placeholder: \"Search\"\n  }))))))), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-10 offset-xl-1\"\n  }, __jsx(Fade, {\n    duration: 400,\n    delay: 300,\n    top: true\n  }, text === \"\" && __jsx(Heading, {\n    size: \"sm\",\n    mt: 6,\n    zIndex: 100,\n    className: \"text-primary\",\n    textTransform: \"uppercase\",\n    mb: 2\n  }, \"Most Popular\")), text === \"\" && servicesArray.map((service, index) => {\n    if (service[1].popular === true) return __jsx(Fade, {\n      key: index,\n      duration: 300,\n      distance: \"4%\",\n      delay: 300,\n      left: true\n    }, __jsx(Box, {\n      mt: 3,\n      p: 8,\n      className: \"rounded-8 border\"\n    }, __jsx(Heading, {\n      size: \"lg\",\n      mb: 2\n    }, service[1].title), __jsx(Text, {\n      fontSize: \"md\",\n      className: \"truncate-ellipsis\"\n    }, service[1].description), __jsx(Link, {\n      href: \"/solutions/[name]\",\n      as: `/solutions/${service[0]}`\n    }, __jsx(\"a\", {\n      onClick: props.toggle,\n      className: \"link text-secondary\"\n    }, \"Learn More\"))));\n  }), text != \"\" && __jsx(\"div\", null, data.services.length > 0 && __jsx(Heading, {\n    size: \"sm\",\n    mt: 6,\n    className: \"text-primary\",\n    textTransform: \"uppercase\",\n    mb: 2\n  }, \"Services\"), data.services && data.services.map((service, index) => __jsx(Fade, {\n    duration: 200,\n    key: index,\n    distance: \"4%\",\n    left: true\n  }, __jsx(Box, {\n    mt: 3,\n    p: 8,\n    className: \"rounded-8 border\"\n  }, __jsx(Heading, {\n    size: \"lg\",\n    mb: 2\n  }, service[1].title), __jsx(Text, {\n    fontSize: \"md\",\n    className: \"truncate-ellipsis\"\n  }, service[1].description), __jsx(Link, {\n    href: \"/solutions/[name]\",\n    as: `/solutions/${service[0]}`\n  }, __jsx(\"a\", {\n    onClick: props.toggle,\n    className: \"link text-secondary\"\n  }, \"Learn More\"))))), data.articles.length > 0 && __jsx(Heading, {\n    size: \"sm\",\n    mt: 6,\n    className: \"text-primary\",\n    textTransform: \"uppercase\",\n    mb: 2\n  }, \"Articles\"), data.articles.length > 0 && data.articles.map((blog, index) => __jsx(Box, {\n    key: index,\n    mt: 3\n  }, __jsx(Heading, {\n    size: \"md\",\n    mb: 2\n  }, blog.title), __jsx(Text, {\n    fontSize: \"md\",\n    overflow: \"hidden\"\n  }, blog.description), __jsx(Link, {\n    href: \"/newsroom/[bid]\",\n    as: \"/newsroom/\" + blog.link\n  }, __jsx(\"a\", {\n    onClick: props.toggle,\n    className: \"link text-secondary\"\n  }, \"Read More\")))), data.articles.length === 0 && data.services.length === 0 && text != \"\" && __jsx(\"div\", {\n    className: \"w-100 d-flex justify-content-center\"\n  }, __jsx(Heading, {\n    mt: 3,\n    opacity: .5\n  }, \"No Result Found\"))), __jsx(Box, {\n    h: \"160px\"\n  })))));\n}\n\nexport default search;","map":null,"metadata":{},"sourceType":"module"}