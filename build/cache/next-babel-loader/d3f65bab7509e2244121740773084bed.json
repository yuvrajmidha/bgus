{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Text, List, Heading, ListItem, ListIcon, Box, Flex } from '@chakra-ui/react';\n\nfunction Content(props) {\n  return __jsx(React.Fragment, null, props.data.map(_ref => {\n    let {\n      fontSize = \"lg\",\n      image,\n      title,\n      titleSize = \"lg\",\n      titleFont,\n      styleType = \"disc\",\n      stylePos = \"outside\",\n      opacity = 1,\n      spacingY = 2,\n      icon,\n      iconColor,\n      list,\n      text\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"fontSize\", \"image\", \"title\", \"titleSize\", \"titleFont\", \"styleType\", \"stylePos\", \"opacity\", \"spacingY\", \"icon\", \"iconColor\", \"list\", \"text\"]);\n\n    return __jsx(React.Fragment, null, title && __jsx(Heading, {\n      fontFamily: titleFont,\n      my: 4,\n      fontSize: titleSize\n    }, title), image && __jsx(Flex, {\n      justifyContent: props.imageJustify\n    }, image), text && __jsx(Text, _extends({\n      fontSize: fontSize,\n      opacity: opacity,\n      my: spacingY\n    }, props), text), list && __jsx(List, _extends({\n      fontSize: fontSize,\n      opacity: opacity,\n      px: 4,\n      my: spacingY,\n      styleType: styleType,\n      stylePos: stylePos\n    }, props), list.map((item, index) => __jsx(ListItem, {\n      key: index\n    }, icon && __jsx(ListIcon, {\n      icon: icon,\n      mr: 4,\n      color: iconColor\n    }), item))));\n  }));\n}\n\nexport default Content;","map":null,"metadata":{},"sourceType":"module"}