{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useToast } from \"@chakra-ui/react\";\n\nfunction Toast(props) {\n  _s();\n\n  const toast = useToast();\n\n  if (props.response == \"TypeError: Failed to fetch\" || props.response.status != 200) {\n    var status = \"error\";\n    var description = \"Error encountered\";\n  } else {\n    status = \"success\";\n    description = \"Response recorded\";\n  }\n\n  return __jsx(React.Fragment, null, toast({\n    title: \"Submission Status\",\n    description: description,\n    status: status,\n    duration: 2400,\n    delay: 400,\n    isClosable: true,\n    position: \"bottom-left\"\n  }));\n}\n\n_s(Toast, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/components/Toast/main.jsx"],"names":["React","useToast","Toast","props","toast","response","status","description","title","duration","delay","isClosable","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;;AACA,MAAIE,KAAK,CAACE,QAAN,IAAkB,4BAAlB,IAAkDF,KAAK,CAACE,QAAN,CAAeC,MAAf,IAAyB,GAA/E,EAAoF;AAChF,QAAIA,MAAM,GAAG,OAAb;AACA,QAAIC,WAAW,GAAG,mBAAlB;AAA0C,GAF9C,MAGK;AACDD,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,WAAW,GAAG,mBAAd;AACH;;AACD,SAAQ,4BACHH,KAAK,CAAC;AACHI,IAAAA,KAAK,EAAE,mBADJ;AAEHD,IAAAA,WAAW,EAAEA,WAFV;AAGHD,IAAAA,MAAM,EAAEA,MAHL;AAIHG,IAAAA,QAAQ,EAAE,IAJP;AAKHC,IAAAA,KAAK,EAAC,GALH;AAMHC,IAAAA,UAAU,EAAE,IANT;AAOHC,IAAAA,QAAQ,EAAE;AAPP,GAAD,CADF,CAAR;AAYH;;GArBQV,K;UACSD,Q;;;KADTC,K;AAsBT,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { useToast } from \"@chakra-ui/react\";\r\nfunction Toast(props) {\r\n    const toast = useToast();\r\n    if (props.response == \"TypeError: Failed to fetch\" || props.response.status != 200) {\r\n        var status = \"error\"\r\n        var description = \"Error encountered\"    }\r\n    else {\r\n        status = \"success\"\r\n        description = \"Response recorded\"\r\n    }\r\n    return (<>\r\n        {toast({\r\n            title: \"Submission Status\",\r\n            description: description,\r\n            status: status,\r\n            duration: 2400,\r\n            delay:400,\r\n            isClosable: true,\r\n            position: \"bottom-left\"\r\n        })}\r\n    </>\r\n    );\r\n}\r\nexport default Toast"]},"metadata":{},"sourceType":"module"}