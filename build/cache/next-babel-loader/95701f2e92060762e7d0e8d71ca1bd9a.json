{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Stack, Box } from \"@chakra-ui/react\";\nimport Link from 'next/link';\nimport data from '../data/searchDatabase.json';\nimport services from '../../../src/database/services';\nimport blogs from '../../../src/database/newsroom'; //dynamicSearch(searchTerm) will return filtered results object of this format : {pages: [{name:\"\",link:\"\"}], services: [], articles: []} (same format as in searchDatabase.json)\n//Results is a functional React Component used to show how this data is mapped.\n\nvar servicesArray = Object.entries(services);\n\nvar Matcher = function Matcher(name, searchTerm) {\n  //Searching in title\n  var title = name.title;\n  if (title.toLowerCase().includes(searchTerm.toLowerCase())) return true; //Searching in tags array\n\n  var _iterator = _createForOfIteratorHelper(name.tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tag = _step.value;\n      var l = Math.min(tag.length, searchTerm.length);\n\n      for (var i = 0; i < l; i++) {\n        if (tag.toLowerCase().charAt(i) == searchTerm.toLowerCase().charAt(i) && tag.toLowerCase().includes(searchTerm.toLowerCase())) return true;\n      }\n    } //Not found then\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n};\n\nvar ServiceMatcher = function ServiceMatcher(name, searchTerm) {\n  // Searching whole term in title\n  var title = name[1].title;\n  var k = Math.min(title.length, searchTerm.length);\n\n  for (var i = 0; i < k; i++) {\n    if (title.toLowerCase().charAt(i) == searchTerm.toLowerCase().charAt(i) && title.toLowerCase().includes(searchTerm.toLowerCase())) return true;\n  } // Searching whole term in tags\n\n\n  var _iterator2 = _createForOfIteratorHelper(name[1].tags),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var tag = _step2.value;\n      var l = Math.min(tag.length, searchTerm.length);\n\n      for (var i = 0; i < l; i++) {\n        if (tag.toLowerCase().charAt(i) == searchTerm.toLowerCase().charAt(i) && tag.toLowerCase().includes(searchTerm.toLowerCase())) return true;\n      }\n    } //Breaking search term and searching in tags array\n\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var searchArray = searchTerm.split(\" \");\n  var flag = false;\n  var flagArray = [];\n\n  var _iterator3 = _createForOfIteratorHelper(searchArray),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _searchTerm = _step3.value;\n      flag = false; //Searching in tags array\n\n      var _iterator4 = _createForOfIteratorHelper(name[1].tags),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _tag = _step4.value;\n\n          var _l = Math.min(_tag.length, _searchTerm.length);\n\n          for (var i = 0; i < _l; i++) {\n            if (_tag.toLowerCase().charAt(i) == _searchTerm.toLowerCase().charAt(i) && _tag.toLowerCase().includes(_searchTerm.toLowerCase())) {\n              flag = true;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      flagArray.push(flag);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  if (flagArray.every(function (x) {\n    return x == true;\n  })) {\n    return true;\n  } //Not found then\n\n\n  return false;\n};\n\nexport var dynamicSearch = function dynamicSearch(searchTerm) {\n  searchTerm = searchTerm.trim();\n  if (searchTerm == '') return {\n    pages: [],\n    services: [],\n    articles: []\n  };else return (//Return object of resultant arrays.\n    {\n      // pages: data.pages.filter( page => Matcher(page,searchTerm)) , //filter pages\n      services: servicesArray.filter(function (service) {\n        return ServiceMatcher(service, searchTerm);\n      }),\n      //filter services\n      articles: blogs.filter(function (article) {\n        return Matcher(article, searchTerm);\n      }) //filter services\n\n    }\n  );\n};\nexport var searchData = data; //Example Results Component, Not a Function!\n//Example Usage:  <Results results = {this.dynamicSearch(searchTerm)}/>\n\nexport function Results(_ref) {\n  var results = _ref.results;\n  return __jsx(React.Fragment, null, __jsx(Stack, {\n    spacing: 0\n  }, results.pages.map(function (page) {\n    return __jsx(Link, {\n      href: page.link\n    }, __jsx(\"a\", null, \" \", __jsx(Box, {\n      key: page.name,\n      p: 4,\n      borderWidth: \"1px\"\n    }, page.name, \" \", __jsx(\"small\", null, \" -- Page \")), \" \"));\n  }), \" \", results.services.map(function (service) {\n    return __jsx(Link, {\n      href: service.link\n    }, __jsx(\"a\", null, \" \", __jsx(Box, {\n      key: service.name,\n      p: 4,\n      borderWidth: \"1px\"\n    }, service.name, \" \", __jsx(\"small\", null, \"  -- Service \"), \" \"), \" \"));\n  }), \" \", results.articles.map(function (article) {\n    return __jsx(Link, {\n      href: article.link\n    }, __jsx(\"a\", null, \" \", __jsx(Box, {\n      key: article.name,\n      p: 4,\n      borderWidth: \"1px\"\n    }, article.name, \" \", __jsx(\"small\", null, \" -- Article \")), \" \"));\n  }), \" \"));\n}","map":null,"metadata":{},"sourceType":"module"}