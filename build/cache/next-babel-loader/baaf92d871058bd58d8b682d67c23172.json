{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport services from \"../../database/services\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Conclusion from \"../../components/footer/conclusion\";\nimport RenderSection from \"../../pageBuilder/RenderSection\";\nimport { Box, Button, ButtonGroup, Image, Heading, Flex } from \"@chakra-ui/react\";\nimport Fade from \"react-reveal/Fade\";\nimport SVG from \"../../components/svg/SVG\";\nimport Section from \"../../pageBuilder/Section\"; // onClick={() => {\n//     window.scrollTo(0, document.getElementById(\"pricing\").offsetTop - 80)\n// }}\n\nfunction Solutions(props) {\n  const service = services[props.name];\n  const [pricing, setPricing] = React.useState(false);\n  React.useEffect(() => {\n    if (document) {\n      setPricing(document.getElementById('pricing'));\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n  }), __jsx(\"meta\", {\n    httpEquiv: \"Content-Type\",\n    content: \"text/html; charset=utf-8\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: service.description\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${service.slogan} - ${service.title} | BG Unified Solutions`,\n    key: \"title\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: service.description\n  }), __jsx(\"title\", null, service.slogan, \" - \", service.title, \" | BG Unified Solutions\")), __jsx(Section, {\n    color: \"white\",\n    py: [\"6rem\", \"8rem\", \"10rem\"],\n    my: 0,\n    bg: \"dark.500\",\n    pos: \"relative\"\n  }, __jsx(\"img\", {\n    className: \"bg-image\",\n    src: service.bgImage,\n    alt: service.title,\n    style: {\n      opacity: \"0.3\"\n    }\n  }), __jsx(Fade, {\n    duration: 700,\n    delay: 1000,\n    bottom: true\n  }, __jsx(Flex, {\n    textAlign: [\"left\", \"left\", \"left\"],\n    alignContent: [\"left\", \"left\", \"left\"],\n    justifyContent: [\"left\", \"left\", \"left\"],\n    align: \"center\",\n    py: 4\n  }, __jsx(SVG, {\n    src: service.icon,\n    color: \"light.400\",\n    size: \"24px\"\n  }), __jsx(Heading, {\n    mx: 6,\n    fontSize: [\"18px\", \"24px\"]\n  }, service.title))), __jsx(Fade, {\n    duration: 700,\n    delay: 100,\n    bottom: true\n  }, __jsx(Flex, {\n    textAlign: [\"left\", \"left\", \"left\"],\n    justifyContent: [\"left\", \"left\", \"left\"]\n  }, __jsx(Heading, {\n    fontSize: [\"40px\", \"48px\", \"56px\", \"64px\"],\n    className: \"text-white\"\n  }, service.slogan))), __jsx(Fade, {\n    duration: 700,\n    delay: 150,\n    bottom: true\n  }, (service === null || service === void 0 ? void 0 : service.image_below_title) && __jsx(Box, {\n    mt: 4\n  }, __jsx(Image, {\n    src: service === null || service === void 0 ? void 0 : service.image_below_title,\n    h: 16\n  }))), __jsx(Fade, {\n    duration: 700,\n    delay: 1000,\n    top: true\n  }, __jsx(Flex, {\n    justifyContent: [\"left\", \"left\", \"left\"]\n  }, __jsx(ButtonGroup, {\n    mt: 10,\n    spacing: [\"10px\", \"16px\"]\n  }, pricing && __jsx(Button, {\n    as: \"a\",\n    href: window.location.href + \"#pricing\",\n    variant: \"solid\",\n    className: \"primary-btn\",\n    fontSize: [\"14px\", \"18px\"],\n    px: [\"18px\", \"24px\"],\n    colorScheme: \"primary\",\n    size: \"lg\"\n  }, \"Explore Now\"), __jsx(Link, {\n    href: \"/contact\"\n  }, __jsx(Button, {\n    variant: \"outline\",\n    fontSize: [\"14px\", \"18px\"],\n    px: [\"18px\", \"24px\"],\n    color: \"white\",\n    _hover: {\n      color: \"black\",\n      bg: \"white\"\n    },\n    size: \"lg\"\n  }, \"Contact Sales\")))))), service.sections && service.sections.map((section, index) => __jsx(RenderSection, _extends({\n    key: index\n  }, section))), __jsx(Box, {\n    bg: \"light.400\",\n    mt: \"128px\",\n    px: \"16px\",\n    py: 6\n  }, service.conclusion && __jsx(Conclusion, {\n    mt: \"-128px\",\n    align: \"center\",\n    title: \"Get Started Now\",\n    description: service.conclusion,\n    explore: false,\n    contact: true\n  })), service.relatedService && __jsx(RenderSection, {\n    title: \"Related Services\",\n    bg: \"light.400\",\n    my: 0,\n    pt: 6,\n    pb: 12,\n    titleStyle: {\n      mb: 6\n    },\n    body: [{\n      width: [\"100%\", \"100%\", \"50%\", \"33%\"],\n      type: \"service\",\n      data: service.relatedService[0]\n    }, {\n      width: [\"100%\", \"100%\", \"50%\", \"33%\"],\n      type: \"service\",\n      data: service.relatedService[1]\n    }, {\n      width: [\"100%\", \"100%\", \"50%\", \"33%\"],\n      type: \"service\",\n      data: service.relatedService[2]\n    }]\n  }));\n} // export async function getStaticPaths() {\n//     const ServiceNames = Object.keys(services)\n//     return {\n//         paths: ServiceNames.map((x)=>({params:{name:x}})),\n//         fallback: false // See the \"fallback\" section below\n//     };\n// }\n\n\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    name\n  } = query;\n  return {\n    props: {\n      name\n    }\n  };\n}\nexport default Solutions;","map":null,"metadata":{},"sourceType":"module"}