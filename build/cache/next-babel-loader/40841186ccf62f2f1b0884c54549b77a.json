{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/RenderSection.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Button, Box } from '@chakra-ui/react';\nimport Section from './Section';\nimport Title from './Title';\nimport Description from './Description';\nimport Row from './Row';\nimport Body from './Body';\nimport Link from 'next/link';\nimport Fade from \"react-reveal/Fade\";\nimport Typewriter from 'typewriter-effect';\n\nfunction RenderSection(_ref) {\n  let {\n    title,\n    typeWriter_title,\n    titleStyle,\n    color = \"dark.500\",\n    align = \"center\",\n    description,\n    containerWidth = [\"100%\", \"100%\", \"720px\", \"960px\", \"1140px\"],\n    descriptionStyle,\n    endingButtonTitle,\n    endingButton,\n    slider,\n    endingButtonLink,\n    sliderOption,\n    gap = 4,\n    rowDistance = 0,\n    body\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"typeWriter_title\", \"titleStyle\", \"color\", \"align\", \"description\", \"containerWidth\", \"descriptionStyle\", \"endingButtonTitle\", \"endingButton\", \"slider\", \"endingButtonLink\", \"sliderOption\", \"gap\", \"rowDistance\", \"body\"]);\n\n  return __jsx(React.Fragment, null, __jsx(Section, _extends({\n    containerWidth: containerWidth,\n    color: color,\n    align: align\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), title && __jsx(Title, _extends({}, titleStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 27\n    }\n  }), title), typeWriter_title && __jsx(Title, _extends({}, titleStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 38\n    }\n  }), __jsx(Box, {\n    justifyContent: align,\n    className: \"d-flex flex-lg-row flex-column text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, typeWriter_title.before), __jsx(Typewriter, {\n    options: {\n      strings: typeWriter_title.typed,\n      autoStart: true,\n      loop: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), \"\\xA0\", typeWriter_title.after)), description && __jsx(Description, _extends({}, descriptionStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }), description), body && __jsx(Fade, {\n    duration: 500,\n    delay: 200,\n    cascade: true,\n    distance: \"5%\",\n    bottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    rowDistance: rowDistance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, body && body.map((b, index) => __jsx(Body, _extends({\n    key: index,\n    gap: gap\n  }, b, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }))))), endingButtonTitle && __jsx(Row, {\n    mt: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }\n  }, __jsx(Link, {\n    href: \"/\" + endingButtonLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 54\n    }\n  }, __jsx(Button, _extends({}, endingButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 90\n    }\n  }), endingButtonTitle)))));\n}\n\nexport default RenderSection;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/RenderSection.jsx"],"names":["React","Button","Box","Section","Title","Description","Row","Body","Link","Fade","Typewriter","RenderSection","title","typeWriter_title","titleStyle","color","align","description","containerWidth","descriptionStyle","endingButtonTitle","endingButton","slider","endingButtonLink","sliderOption","gap","rowDistance","body","props","before","strings","typed","autoStart","loop","after","map","b","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button,Box } from '@chakra-ui/react';\r\nimport Section from './Section';\r\nimport Title from './Title';\r\nimport Description from './Description';\r\nimport Row from './Row';\r\nimport Body from './Body';\r\nimport Link from 'next/link';\r\nimport Fade from \"react-reveal/Fade\"\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nfunction RenderSection({ title, typeWriter_title, titleStyle, color = \"dark.500\", align = \"center\", description, containerWidth = [\"100%\", \"100%\", \"720px\", \"960px\", \"1140px\"], descriptionStyle, endingButtonTitle, endingButton, slider, endingButtonLink, sliderOption, gap = 4, rowDistance = 0, body, ...props }) {\r\n    return (\r\n        <>\r\n            <Section containerWidth={containerWidth} color={color} align={align} {...props}>\r\n                {title && <Title {...titleStyle}>{title}</Title>}\r\n                {typeWriter_title && <Title {...titleStyle}>\r\n                <Box  justifyContent={align} className=\"d-flex flex-lg-row flex-column text-center\">\r\n                    <span>{typeWriter_title.before}</span>\r\n                    <Typewriter options={{\r\n                        strings: typeWriter_title.typed,\r\n                        autoStart: true,\r\n                        loop: true\r\n                    }}></Typewriter>&nbsp;\r\n                    {typeWriter_title.after}\r\n                </Box>\r\n                </Title>}\r\n                {description && <Description {...descriptionStyle}>{description}</Description>}\r\n                {body && \r\n                    <Fade duration={500} delay={200} cascade distance={\"5%\"} bottom>\r\n                        <Row rowDistance={rowDistance}>\r\n                            {body && body.map((b, index) => (\r\n                                <Body key={index} gap={gap} {...b} />\r\n                            ))}\r\n                        </Row>\r\n                    </Fade>\r\n                }\r\n                {endingButtonTitle && <Row mt=\"2rem\"><Link href={\"/\" + endingButtonLink}><Button {...endingButton}>{endingButtonTitle}</Button></Link></Row>}\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RenderSection;"]},"metadata":{},"sourceType":"module"}