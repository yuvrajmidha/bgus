{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/components/Countup/main.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Heading } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from 'react-visibility-sensor';\n\nconst MyCount = _ref => {\n  _s();\n\n  let {\n    endPoint,\n    startPoint = 0,\n    duration = 1.7\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"endPoint\", \"startPoint\", \"duration\"]);\n\n  const {\n    0: viewPortEntered,\n    1: setViewPortEntered\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(CountUp, _extends({\n    end: endPoint,\n    start: viewPortEntered ? null : startPoint,\n    useEasing: true,\n    duration: duration\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), _ref2 => {\n    let {\n      countUpRef\n    } = _ref2;\n    return __jsx(VisibilitySensor, {\n      active: !viewPortEntered,\n      onChange: isVisible => {\n        if (isVisible) {\n          setViewPortEntered(true);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", _extends({\n      ref: countUpRef,\n      className: \"mb-0 text-primary\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    })));\n  }), __jsx(Heading, {\n    className: \"display6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, props.subtext || \"\"), __jsx(Text, {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, props.description || \"\"));\n};\n\n_s(MyCount, \"8AKg4UTEcuAm2yS5CsLyRzCMCDY=\");\n\n_c = MyCount;\nexport default MyCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCount\");","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/components/Countup/main.jsx"],"names":["Heading","React","useState","CountUp","VisibilitySensor","MyCount","endPoint","startPoint","duration","props","viewPortEntered","setViewPortEntered","countUpRef","isVisible","subtext","description"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,OAAO,GAAG,QAA4D;AAAA;;AAAA,MAA3D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAU,GAAG,CAAzB;AAA4BC,IAAAA,QAAQ,GAAG;AAAvC,GAA2D;AAAA,MAAZC,KAAY;;AACxE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,SACI,4BACI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEI,QAAd;AAAwB,IAAA,KAAK,EAAEI,eAAe,GAAG,IAAH,GAAUH,UAAxD;AAAoE,IAAA,SAAS,EAAE,IAA/E;AAAqF,IAAA,QAAQ,EAAEC;AAA/F,KAA6GC,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACK,SAAoB;AAAA,QAAnB;AAAEG,MAAAA;AAAF,KAAmB;AACjB,WACI,MAAC,gBAAD;AACI,MAAA,MAAM,EAAE,CAACF,eADb;AAEI,MAAA,QAAQ,EAAEG,SAAS,IAAI;AACnB,YAAIA,SAAJ,EAAe;AACXF,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI;AAAM,MAAA,GAAG,EAAEC,UAAX;AAAuB,MAAA,SAAS,EAAC;AAAjC,OAAyDH,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARJ,CADJ;AAYH,GAdL,CADJ,EAiBI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAAK,CAACK,OAAN,IAAiB,EAAhD,CAjBJ,EAkBI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAK,CAACM,WAAN,IAAqB,EAAvD,CAlBJ,CADJ;AAsBH,CAxBD;;GAAMV,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import { Heading } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nconst MyCount = ({ endPoint, startPoint = 0, duration = 1.7, ...props }) => {\r\n    const [viewPortEntered, setViewPortEntered] = useState(false);\r\n    return (\r\n        <>\r\n            <CountUp end={endPoint} start={viewPortEntered ? null : startPoint} useEasing={true} duration={duration} {...props}>\r\n                {({ countUpRef }) => {\r\n                    return (\r\n                        <VisibilitySensor\r\n                            active={!viewPortEntered}\r\n                            onChange={isVisible => {\r\n                                if (isVisible) {\r\n                                    setViewPortEntered(true);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <span ref={countUpRef} className=\"mb-0 text-primary\" {...props} />\r\n                        </VisibilitySensor>\r\n                    );\r\n                }}\r\n            </CountUp>\r\n            <Heading className=\"display6\">{props.subtext || \"\"}</Heading>\r\n            <Text className=\"text-secondary\">{props.description || \"\"}</Text>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyCount;"]},"metadata":{},"sourceType":"module"}