{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/AccordionWithImage.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Accordion, Box, Icon, AccordionButton, AccordionItem, AccordionPanel, Flex, Image, SimpleGrid, Grid, Heading } from \"@chakra-ui/react\";\nimport { FaPlus } from 'react-icons/fa';\n\nfunction AccordionWithImage(_ref) {\n  let {\n    content\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"content\"]);\n\n  const [current, setCurrent] = React.useState(0);\n  return __jsx(Grid, _extends({\n    templateColumns: [\"auto\", \"auto\", \"50% 50%\"]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, __jsx(Accordion, {\n    onChange: index => setCurrent(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, content && content.map((data, index) => __jsx(AccordionItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, ({\n    isExpanded\n  }) => __jsx(React.Fragment, null, __jsx(AccordionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }\n  }, __jsx(Box, {\n    py: 2,\n    flex: \"1\",\n    textAlign: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }\n  }, __jsx(Heading, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, data.title)), !isExpanded && __jsx(FaPlus, {\n    name: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 49\n    }\n  })), __jsx(AccordionPanel, {\n    pb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, data.description)))))), __jsx(Box, {\n    display: [\"none\", \"none\", \"block\"],\n    p: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, content && content.map((data, index) => {\n    if (data.image) return __jsx(React.Fragment, null, current === index && __jsx(Image, {\n      alt: data.title,\n      h: \"280px\",\n      m: \"auto\",\n      src: data.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 44\n      }\n    }));\n  })));\n}\n\nexport default AccordionWithImage;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/AccordionWithImage.jsx"],"names":["React","Accordion","Box","Icon","AccordionButton","AccordionItem","AccordionPanel","Flex","Image","SimpleGrid","Grid","Heading","FaPlus","AccordionWithImage","content","props","current","setCurrent","useState","index","map","data","isExpanded","title","description","image"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,eAA7B,EAA8CC,aAA9C,EAA6DC,cAA7D,EAA6EC,IAA7E,EAAmFC,KAAnF,EAA0FC,UAA1F,EAAsGC,IAAtG,EAA4GC,OAA5G,QAA0H,kBAA1H;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,SAASC,kBAAT,OAAiD;AAAA,MAArB;AAACC,IAAAA;AAAD,GAAqB;AAAA,MAARC,KAAQ;;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,KAAK,CAACkB,QAAN,CAAe,CAAf,CAA9B;AACA,SACI,MAAC,IAAD;AAAM,IAAA,eAAe,EAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB;AAAxB,KAAyDH,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAGI,KAAD,IAAWF,UAAU,CAACE,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,OAAO,IAAIA,OAAO,CAACM,GAAR,CAAY,CAACC,IAAD,EAAOF,KAAP,KAChB,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEG,IAAAA;AAAF,GAAD,KACD,4BACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,IAAI,EAAC,GAAjB;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,IAAI,CAACE,KAAzB,CADJ,CADA,EAIC,CAACD,UAAD,IAAe,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJhB,CADJ,EAOI,MAAC,cAAD;AAAgB,IAAA,EAAE,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACG,WADV,CAPJ,CAFJ,CADI,CADZ,CADJ,CADJ,EAsBI,MAAC,GAAD;AAAK,IAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,CAAd;AAAyC,IAAA,CAAC,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,OAAO,IAAIA,OAAO,CAACM,GAAR,CAAY,CAACC,IAAD,EAAOF,KAAP,KAAiB;AACrC,QAAGE,IAAI,CAACI,KAAR,EAAe,OAAQ,4BAClBT,OAAO,KAAKG,KAAZ,IAAsB,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEE,IAAI,CAACE,KAAjB;AAAwB,MAAA,CAAC,EAAC,OAA1B;AAAkC,MAAA,CAAC,EAAC,MAApC;AAA2C,MAAA,GAAG,EAAEF,IAAI,CAACI,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAAR;AAGlB,GAJW,CADZ,CAtBJ,CADJ;AAgCH;;AAED,eAAeZ,kBAAf","sourcesContent":["import React from 'react';\r\nimport {Accordion,Box, Icon, AccordionButton, AccordionItem, AccordionPanel, Flex, Image, SimpleGrid, Grid, Heading} from \"@chakra-ui/react\"\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nfunction AccordionWithImage({content, ...props}) {\r\n    const [current, setCurrent] = React.useState(0)\r\n    return (\r\n        <Grid templateColumns= {[\"auto\", \"auto\", \"50% 50%\"]} {...props}>\r\n            <Box>\r\n                <Accordion onChange={(index) => setCurrent(index)} >\r\n                {content && content.map((data, index) => (\r\n                        <AccordionItem>\r\n                            {({ isExpanded }) => (\r\n                            <>\r\n                                <AccordionButton>\r\n                                <Box py={2} flex=\"1\" textAlign=\"left\">\r\n                                    <Heading size=\"md\">{data.title}</Heading>\r\n                                </Box>\r\n                                {!isExpanded && <FaPlus name=\"add\"/>}\r\n                                </AccordionButton>\r\n                                <AccordionPanel pb={4}>\r\n                                    {data.description}\r\n                                </AccordionPanel>\r\n                            </>\r\n                            )}\r\n                        </AccordionItem>\r\n                ))}\r\n                </Accordion>\r\n            </Box>\r\n            <Box display={[\"none\", \"none\", \"block\"]} p={6}>\r\n            {content && content.map((data, index) => {\r\n                if(data.image) return (<>\r\n                    {current === index &&  <Image alt={data.title} h=\"280px\" m=\"auto\" src={data.image}></Image>}\r\n                </>)   \r\n            })}\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default AccordionWithImage;"]},"metadata":{},"sourceType":"module"}