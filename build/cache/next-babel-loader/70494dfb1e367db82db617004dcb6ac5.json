{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { PricingQuote } from \"../../components/cards/PricingCard\";\nimport { Slider, Select, SliderFilledTrack, SliderTrack, SliderThumb, Button, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, FormLabel, Switch } from \"@chakra-ui/react\";\nimport Fade from \"react-reveal/Fade\";\nimport RadioGroup from '../../components/inputs/RadioGroup';\n\nconst verifyNotEmpty = (x, text) => x > 0 ? \", \" + x + \" \" + text : \"\";\n\nconst CustomRadio = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    isChecked,\n    isDisabled,\n    value\n  } = props,\n        rest = _objectWithoutProperties(props, [\"isChecked\", \"isDisabled\", \"value\"]);\n\n  return __jsx(Button, _extends({\n    className: \"my-1\",\n    fontSize: [\"12px\", \"14px\", \"15px\"],\n    ref: ref,\n    variant: isChecked ? \"solid\" : \"outline\",\n    colorScheme: isChecked ? \"primary\" : \"gray.300\",\n    \"aria-checked\": isChecked,\n    role: \"radio\",\n    isDisabled: isDisabled\n  }, rest));\n});\n\nfunction WafPricing(props) {\n  const [type, setType] = React.useState(\"Radware\");\n  const [applications, setApplications] = React.useState(1);\n  const [value, setValue] = React.useState(10);\n\n  const handleChange = value => setValue(value);\n\n  const [bot, setBot] = React.useState(false);\n  const [redundancy, setRedundancy] = React.useState(false);\n\n  const handleBot = swi => swi ? \",Enable BOT Protection\" : \"\";\n\n  const handleRedundancy = swi => swi ? \",Enable Redundancy\" : \"\";\n\n  return __jsx(\"div\", {\n    id: \"pricing\",\n    className: \"container\"\n  }, __jsx(Fade, {\n    className: \"px-lg-5 \",\n    duration: 500,\n    bottom: true\n  }, __jsx(\"div\", {\n    className: \"px-lg-4 py-5 rounded-8 shadow-lg\"\n  }, __jsx(\"div\", {\n    className: \"display5 text-center\"\n  }, \"WAF Options\"), __jsx(\"div\", {\n    className: \"row px-3 justify-content-center px-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-10 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Choose a type\"), __jsx(RadioGroup, {\n    setValue: setType,\n    options: [\"Radware\", \"F5\", \"Fortinet\"]\n  })), __jsx(\"div\", {\n    className: \"col-lg-5 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"How many applications?\")), __jsx(\"div\", {\n    className: \"offset-lg-1 col-lg-4 mt-3\"\n  }, __jsx(NumberInput, {\n    onChange: value => {\n      value <= 20 ? setApplications(value) : setApplications(20);\n    },\n    value: applications,\n    min: 1,\n    max: 20\n  }, __jsx(NumberInputField, {\n    className: \"bg-light\"\n  }), __jsx(NumberInputStepper, null, __jsx(NumberIncrementStepper, null), __jsx(NumberDecrementStepper, null)))), __jsx(\"div\", {\n    className: \"col-lg-10 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Bandwidth per Application (in Mbps)\"), __jsx(Slider, {\n    color: \"primary\",\n    my: 2,\n    min: 1,\n    max: 80,\n    value: value,\n    onChange: handleChange\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: value * 5\n  }))), __jsx(\"div\", {\n    className: \"col-lg-10 mt-4 d-flex justify-content-between\"\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\"\n  }, __jsx(Switch, {\n    color: \"primary\",\n    onChange: e => {\n      setBot(e.target.checked);\n    },\n    isChecked: bot,\n    id: \"license\"\n  }), __jsx(FormLabel, {\n    ml: [0, 3],\n    htmlFor: \"license\"\n  }, \"BOT Protection\")), __jsx(\"div\", {\n    className: \"d-flex align-items-center\"\n  }, __jsx(Switch, {\n    color: \"primary\",\n    onChange: e => {\n      setRedundancy(e.target.checked);\n    },\n    isChecked: redundancy,\n    id: \"license\"\n  }), __jsx(FormLabel, {\n    ml: [0, 3],\n    htmlFor: \"license\"\n  }, \"Redundancy\"))), __jsx(\"div\", {\n    className: \"col-lg-12 mt-4 d-flex justify-content-center\"\n  }, __jsx(PricingQuote, {\n    serviceName: \"WAF As A Service\",\n    serviceDescription: `${type} ${verifyNotEmpty(applications, \"Application\")} ${verifyNotEmpty(value * 5, \"Mbps Bandwidth/App\")} ${handleBot(bot)} ${handleRedundancy(redundancy)}`,\n    button: true\n  }))))));\n}\n\nexport default WafPricing;","map":null,"metadata":{},"sourceType":"module"}