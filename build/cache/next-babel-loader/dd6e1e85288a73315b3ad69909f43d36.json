{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Box, Image, Flex, Text } from \"@chakra-ui/react\";\n\nfunction ImageGroup(_ref) {\n  let {\n    images,\n    captionStyles,\n    spacing,\n    maxW,\n    width = \"100%\"\n  } = _ref,\n      data = _objectWithoutProperties(_ref, [\"images\", \"captionStyles\", \"spacing\", \"maxW\", \"width\"]);\n\n  var allImages = __jsx(\"div\", null);\n\n  if (images.length === 1) {\n    allImages = images.map((url, index) => __jsx(Image, _extends({\n      alt: \"\",\n      src: url,\n      width: width,\n      key: \"image-\" + index\n    }, data)));\n  } else {\n    allImages = images.map((url, index) => __jsx(Image, _extends({\n      alt: \"\",\n      src: url,\n      mx: spacing || \"16px\",\n      width: width,\n      maxW: maxW || [\"80px\", \"135.5px\", \"175px\", \"231px\", \"283px\"],\n      key: \"image-\" + index\n    }, data)));\n  }\n\n  return __jsx(Flex, {\n    justify: \"center\",\n    wrap: \"wrap\",\n    flexGrow: 1,\n    textAlign: \"center\"\n  }, allImages);\n}\n\nexport default ImageGroup;","map":null,"metadata":{},"sourceType":"module"}