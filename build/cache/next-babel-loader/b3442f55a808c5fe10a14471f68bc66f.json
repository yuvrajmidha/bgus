{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/Feature2.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Grid, Icon, Image, Heading, Text, Box, Flex } from '@chakra-ui/react';\nimport { ReactSVG } from 'react-svg';\nimport SVG from '../../components/svg/SVG';\n\nfunction Feature2(_ref) {\n  let {\n    image,\n    icon,\n    size = \"48px\",\n    title,\n    imageWidth = \"96px\",\n    iconColor = \"dark.500\",\n    color = \"dark.500\",\n    svg,\n    titleSize = \"lg\",\n    description,\n    align = \"center\",\n    textOpacity,\n    titleFont = \"Nexa Bold\",\n    titleColor\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"image\", \"icon\", \"size\", \"title\", \"imageWidth\", \"iconColor\", \"color\", \"svg\", \"titleSize\", \"description\", \"align\", \"textOpacity\", \"titleFont\", \"titleColor\"]);\n\n  return __jsx(Grid, _extends({\n    align: align,\n    templateColumns: [`${imageWidth} auto`]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), svg && __jsx(SVG, {\n    src: svg,\n    color: iconColor,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }), __jsx(Flex, {\n    textAlign: \"right\",\n    justifyContent: [\"start\", \"start\", \"center\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, image && __jsx(Image, {\n    alt: \"\",\n    src: image,\n    objectFit: \"cover\",\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }\n  })), icon && __jsx(Box, {\n    as: icon,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Heading, {\n    fontFamily: titleFont,\n    fontSize: props.titleFontSize,\n    size: titleSize,\n    textAlign: align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, title), __jsx(Text, {\n    fontSize: props.textSize,\n    opacity: textOpacity,\n    mt: 2,\n    textAlign: \"justify\",\n    style: {\n      textAlignLast: align\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, description)));\n}\n\nexport default Feature2;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/Feature2.jsx"],"names":["React","Grid","Icon","Image","Heading","Text","Box","Flex","ReactSVG","SVG","Feature2","image","icon","size","title","imageWidth","iconColor","color","svg","titleSize","description","align","textOpacity","titleFont","titleColor","props","titleFontSize","textSize","textAlignLast"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,GAA3C,EAA+CC,IAA/C,QAA2D,kBAA3D;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,SAASC,QAAT,OAAwO;AAAA,MAAtN;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,IAAI,GAAG,MAAtB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,UAAU,GAAC,MAAhD;AAAwDC,IAAAA,SAAS,GAAG,UAApE;AAAgFC,IAAAA,KAAK,GAAG,UAAxF;AAAoGC,IAAAA,GAApG;AAAyGC,IAAAA,SAAS,GAAG,IAArH;AAA2HC,IAAAA,WAA3H;AAAwIC,IAAAA,KAAK,GAAG,QAAhJ;AAA0JC,IAAAA,WAA1J;AAAuKC,IAAAA,SAAS,GAAC,WAAjL;AAA8LC,IAAAA;AAA9L,GAAsN;AAAA,MAATC,KAAS;;AACpO,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAb;AAAoB,IAAA,eAAe,EAAE,CAAE,GAAEN,UAAW,OAAf;AAArC,KAAiEU,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKP,GAAG,IAAI,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,KAAK,EAAEF,SAAtB;AAAiC,IAAA,IAAI,EAAEH,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,cAAc,EAAE,CAAC,OAAD,EAAS,OAAT,EAAiB,QAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,KAAK,IAAI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAC,EAAX;AAAc,IAAA,GAAG,EAAEA,KAAnB;AAA0B,IAAA,SAAS,EAAC,OAApC;AAA4C,IAAA,IAAI,EAAEE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CAFJ,EAKKD,IAAI,IAAI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEA,IAAT;AAAe,IAAA,IAAI,EAAEC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEU,SAArB;AAAgC,IAAA,QAAQ,EAAEE,KAAK,CAACC,aAAhD;AAA+D,IAAA,IAAI,EAAEP,SAArE;AAAgF,IAAA,SAAS,EAAEE,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmGP,KAAnG,CADJ,EAEI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,KAAK,CAACE,QAAtB;AAAgC,IAAA,OAAO,EAAEL,WAAzC;AAAsD,IAAA,EAAE,EAAE,CAA1D;AAA6D,IAAA,SAAS,EAAC,SAAvE;AAAiF,IAAA,KAAK,EAAE;AAAEM,MAAAA,aAAa,EAAEP;AAAjB,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmHD,WAAnH,CAFJ,CANJ,CADJ;AAaH;;AACD,eAAeV,QAAf","sourcesContent":["import React from 'react';\r\nimport { Grid, Icon, Image, Heading, Text, Box,Flex } from '@chakra-ui/react';\r\nimport { ReactSVG } from 'react-svg'\r\nimport SVG from '../../components/svg/SVG'\r\n\r\nfunction Feature2({ image, icon, size = \"48px\", title, imageWidth=\"96px\", iconColor = \"dark.500\", color = \"dark.500\", svg, titleSize = \"lg\", description, align = \"center\", textOpacity, titleFont=\"Nexa Bold\", titleColor, ...props }) {\r\n    return (\r\n        <Grid align={align} templateColumns={[`${imageWidth} auto`]} {...props}>\r\n            {svg && <SVG src={svg} color={iconColor} size={size}></SVG>}\r\n            <Flex textAlign=\"right\" justifyContent={[\"start\",\"start\",\"center\"]}>\r\n            {image && <Image alt=\"\" src={image} objectFit=\"cover\" size={size}></Image>}\r\n            </Flex>\r\n            {icon && <Box as={icon} size={size}></Box>}\r\n            <Box>\r\n                <Heading fontFamily={titleFont} fontSize={props.titleFontSize} size={titleSize} textAlign={align}>{title}</Heading>\r\n                <Text fontSize={props.textSize} opacity={textOpacity} mt={2} textAlign=\"justify\" style={{ textAlignLast: align }}>{description}</Text>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\nexport default Feature2;"]},"metadata":{},"sourceType":"module"}