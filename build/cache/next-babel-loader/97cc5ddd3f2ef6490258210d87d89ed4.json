{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex, Box, Image } from '@chakra-ui/react';\n\nfunction AlternateRow(_ref) {\n  let {\n    align,\n    justify,\n    wrap,\n    rowDistance,\n    direction,\n    content,\n    imageStyles,\n    descriptionStyles,\n    textWidth,\n    titleStyles\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"align\", \"justify\", \"wrap\", \"rowDistance\", \"direction\", \"content\", \"imageStyles\", \"descriptionStyles\", \"textWidth\", \"titleStyles\"]);\n\n  return __jsx(Flex, _extends({\n    align: align || \"flex-end\",\n    direction: direction || \"row\",\n    mt: rowDistance,\n    wrap: wrap || \"wrap\",\n    justify: justify || \"space-around\"\n  }, props), __jsx(Box, {\n    maxWidth: textWidth\n  }, __jsx(Box, titleStyles, content.title), __jsx(Box, descriptionStyles, content.description)), __jsx(Image, _extends({\n    alt: \"\"\n  }, imageStyles, {\n    src: content.image\n  })));\n}\n\nexport default AlternateRow;","map":null,"metadata":{},"sourceType":"module"}