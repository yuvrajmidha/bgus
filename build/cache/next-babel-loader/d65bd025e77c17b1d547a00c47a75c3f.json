{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/ImageGroup.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Image, Flex, Text } from \"@chakra-ui/react\";\n\nfunction ImageGroup(_ref) {\n  let {\n    images,\n    captionStyles,\n    spacing,\n    maxW,\n    width = \"100%\"\n  } = _ref,\n      data = _objectWithoutProperties(_ref, [\"images\", \"captionStyles\", \"spacing\", \"maxW\", \"width\"]);\n\n  var allImages = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 21\n    }\n  });\n\n  if (images.length === 1) {\n    allImages = images.map((url, index) => __jsx(Image, _extends({\n      alt: \"\",\n      src: url,\n      width: width,\n      key: \"image-\" + index\n    }, data, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 47\n      }\n    })));\n  } else {\n    allImages = images.map((url, index) => __jsx(Image, _extends({\n      alt: \"\",\n      src: url,\n      mx: spacing || \"16px\",\n      width: width,\n      maxW: maxW || [\"80px\", \"135.5px\", \"175px\", \"231px\", \"283px\"],\n      key: \"image-\" + index\n    }, data, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 47\n      }\n    })));\n  }\n\n  return __jsx(Flex, {\n    justify: \"center\",\n    wrap: \"wrap\",\n    flexGrow: 1,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, allImages);\n}\n\n_c = ImageGroup;\nexport default ImageGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGroup\");","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/ImageGroup.jsx"],"names":["React","Box","Image","Flex","Text","ImageGroup","images","captionStyles","spacing","maxW","width","data","allImages","length","map","url","index"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAaC,KAAb,EAAoBC,IAApB,EAA0BC,IAA1B,QAAqC,kBAArC;;AAEA,SAASC,UAAT,OAAsF;AAAA,MAAlE;AAAEC,IAAAA,MAAF;AAASC,IAAAA,aAAT;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,IAAjC;AAAuCC,IAAAA,KAAK,GAAG;AAA/C,GAAkE;AAAA,MAARC,IAAQ;;AAClF,MAAIC,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;;AACA,MAAIN,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACrBD,IAAAA,SAAS,GAAGN,MAAM,CAACQ,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAe,MAAC,KAAD;AAAO,MAAA,GAAG,EAAC,EAAX;AAAc,MAAA,GAAG,EAAED,GAAnB;AAAwB,MAAA,KAAK,EAAEL,KAA/B;AAAsC,MAAA,GAAG,EAAE,WAAWM;AAAtD,OAAiEL,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1B,CAAZ;AACH,GAFD,MAGK;AACDC,IAAAA,SAAS,GAAGN,MAAM,CAACQ,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAe,MAAC,KAAD;AAAO,MAAA,GAAG,EAAC,EAAX;AAAc,MAAA,GAAG,EAAED,GAAnB;AAAwB,MAAA,EAAE,EAAEP,OAAO,IAAI,MAAvC;AAA+C,MAAA,KAAK,EAAEE,KAAtD;AAA6D,MAAA,IAAI,EAAED,IAAI,IAAI,CAAE,MAAF,EAAU,SAAV,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,OAAvC,CAA3E;AAA4H,MAAA,GAAG,EAAE,WAAWO;AAA5I,OAAuJL,IAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1B,CAAZ;AACH;;AAED,SACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,QAAQ,EAAE,CAA7C;AAAgD,IAAA,SAAS,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,SADL,CADJ;AAKH;;KAdQP,U;AAeT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { Box,Image, Flex ,Text} from \"@chakra-ui/react\";\r\n\r\nfunction ImageGroup({ images,captionStyles, spacing, maxW, width = \"100%\", ...data }) {\r\n    var allImages = <div></div>\r\n    if (images.length === 1) {\r\n        allImages = images.map((url, index) =><Image alt=\"\" src={url} width={width} key={\"image-\" + index} {...data}></Image>);\r\n    }\r\n    else {\r\n        allImages = images.map((url, index) =><Image alt=\"\" src={url} mx={spacing || \"16px\"} width={width} maxW={maxW || [ \"80px\", \"135.5px\", \"175px\", \"231px\", \"283px\"]} key={\"image-\" + index} {...data}></Image>);\r\n    }\r\n\r\n    return (\r\n        <Flex justify=\"center\" wrap=\"wrap\" flexGrow={1} textAlign=\"center\">\r\n            {allImages}\r\n        </Flex>\r\n    );\r\n}\r\nexport default ImageGroup;"]},"metadata":{},"sourceType":"module"}