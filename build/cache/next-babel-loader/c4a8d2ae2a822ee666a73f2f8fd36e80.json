{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/Content.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Text, List, Heading, ListItem, ListIcon, Box, Flex } from '@chakra-ui/react';\n\nfunction Content(props) {\n  return __jsx(React.Fragment, null, props.data.map(_ref => {\n    let {\n      fontSize = \"lg\",\n      image,\n      title,\n      titleSize = \"lg\",\n      titleFont,\n      styleType = \"disc\",\n      stylePos = \"outside\",\n      opacity = 1,\n      spacingY = 2,\n      icon,\n      iconColor,\n      list,\n      text\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"fontSize\", \"image\", \"title\", \"titleSize\", \"titleFont\", \"styleType\", \"stylePos\", \"opacity\", \"spacingY\", \"icon\", \"iconColor\", \"list\", \"text\"]);\n\n    return __jsx(React.Fragment, null, title && __jsx(Heading, {\n      fontFamily: titleFont,\n      my: 4,\n      fontSize: titleSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 27\n      }\n    }, title), image && __jsx(Flex, {\n      justifyContent: props.imageJustify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 27\n      }\n    }, image), text && __jsx(Text, _extends({\n      fontSize: fontSize,\n      opacity: opacity,\n      my: spacingY\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 26\n      }\n    }), text), list && __jsx(List, _extends({\n      fontSize: fontSize,\n      opacity: opacity,\n      px: 4,\n      my: spacingY,\n      styleType: styleType,\n      stylePos: stylePos\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    }), list.map((item, index) => __jsx(ListItem, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }, icon && __jsx(ListIcon, {\n      icon: icon,\n      mr: 4,\n      color: iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 58\n      }\n    }), item))));\n  }));\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/pageBuilder/components/Content.jsx"],"names":["React","Text","List","Heading","ListItem","ListIcon","Box","Flex","Content","props","data","map","fontSize","image","title","titleSize","titleFont","styleType","stylePos","opacity","spacingY","icon","iconColor","list","text","imageJustify","item","index"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAgDC,GAAhD,EAAqDC,IAArD,QAAiE,kBAAjE;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SACI,4BACKA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAC;AAACC,MAAAA,QAAQ,GAAC,IAAV;AAAeC,MAAAA,KAAf;AAAqBC,MAAAA,KAArB;AAA2BC,MAAAA,SAAS,GAAC,IAArC;AAA0CC,MAAAA,SAA1C;AAAqDC,MAAAA,SAAS,GAAC,MAA/D;AAAuEC,MAAAA,QAAQ,GAAC,SAAhF;AAA2FC,MAAAA,OAAO,GAAC,CAAnG;AAAsGC,MAAAA,QAAQ,GAAC,CAA/G;AAAiHC,MAAAA,IAAjH;AAAuHC,MAAAA,SAAvH;AAAkIC,MAAAA,IAAlI;AAAwIC,MAAAA;AAAxI,KAAD;AAAA,QAAkJf,KAAlJ;;AAAA,WACZ,4BACCK,KAAK,IAAI,MAAC,OAAD;AAAS,MAAA,UAAU,EAAEE,SAArB;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAuC,MAAA,QAAQ,EAAED,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DD,KAA7D,CADV,EAECD,KAAK,IAAI,MAAC,IAAD;AAAM,MAAA,cAAc,EAAEJ,KAAK,CAACgB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLZ,KADK,CAFV,EAMCW,IAAI,IAAI,MAAC,IAAD;AACL,MAAA,QAAQ,EAAEZ,QADL;AAEL,MAAA,OAAO,EAAEO,OAFJ;AAGL,MAAA,EAAE,EAAEC;AAHC,OAIDX,KAJC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMJe,IANI,CANT,EAcCD,IAAI,IAAI,MAAC,IAAD;AACL,MAAA,QAAQ,EAAEX,QADL;AAEL,MAAA,OAAO,EAAEO,OAFJ;AAGL,MAAA,EAAE,EAAE,CAHC;AAIL,MAAA,EAAE,EAAEC,QAJC;AAKL,MAAA,SAAS,EAAEH,SALN;AAML,MAAA,QAAQ,EAAEC;AANL,OAMmBT,KANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQJc,IAAI,CAACZ,GAAL,CAAS,CAACe,IAAD,EAAOC,KAAP,KACJ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBN,IAAI,IAAI,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,EAAE,EAAE,CAA1B;AAA6B,MAAA,KAAK,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,EAA2FI,IAA3F,CADL,CARI,CAdT,CADY;AAAA,GAAf,CADL,CADJ;AAiCH;;AAED,eAAelB,OAAf","sourcesContent":["import React from 'react';\r\nimport { Text, List,Heading, ListItem, ListIcon,Box, Flex } from '@chakra-ui/react';\r\n\r\nfunction Content(props) {\r\n    return (\r\n        <>\r\n            {props.data.map(({fontSize=\"lg\",image,title,titleSize=\"lg\",titleFont, styleType=\"disc\", stylePos=\"outside\", opacity=1, spacingY=2,icon, iconColor, list, text, ...props}) => (\r\n                <>\r\n                {title && <Heading fontFamily={titleFont} my={4} fontSize={titleSize}>{title}</Heading>}\r\n                {image && <Flex justifyContent={props.imageJustify} >\r\n                    {image}\r\n                </Flex>\r\n                    }\r\n                {text && <Text \r\n                    fontSize={fontSize} \r\n                    opacity={opacity}\r\n                    my={spacingY}\r\n                    {...props}\r\n                    >\r\n                    {text}\r\n                </Text>}\r\n                {list && <List \r\n                    fontSize={fontSize} \r\n                    opacity={opacity}\r\n                    px={4}\r\n                    my={spacingY}\r\n                    styleType={styleType}\r\n                    stylePos={stylePos} {...props}\r\n                    >\r\n                    {list.map((item, index) => (\r\n                          <ListItem key={index}>{icon && <ListIcon icon={icon} mr={4} color={iconColor}></ListIcon>}{item}</ListItem>\r\n                    ))}\r\n                </List>}\r\n                </>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}