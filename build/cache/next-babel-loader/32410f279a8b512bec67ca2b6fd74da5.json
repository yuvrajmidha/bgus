{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/components/ReportanError/main.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button, ModalContent, ModalHeader, Spinner, Modal, ModalOverlay, Textarea, Tabs, TabPanels, TabList, TabPanel, Tab, Select, Box, Radio, RadioButtonGroup, RadioGroup, Collapse, ModalBody, Text } from \"@chakra-ui/react\";\nimport deviceList from '../../deviceDetect.js';\nimport Toast from '../Toast/main';\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport { deviceType, browserName, osName } from \"react-device-detect\";\nimport SVG from '../svg/SVG';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport { FaArrowLeft } from 'react-icons/fa';\nconst CustomRadio = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    isChecked\n  } = props,\n        rest = _objectWithoutProperties(props, [\"isChecked\"]);\n\n  return __jsx(Button, _extends({\n    ref: ref,\n    colorScheme: isChecked ? \"red\" : \"gray\",\n    color: isChecked ? \"light.500\" : 'black.500',\n    \"aria-checked\": isChecked,\n    role: \"radio\",\n    height: \"120px\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n});\nconst deviceInfo = {\n  browser: browserName,\n  os: osName,\n  device: deviceType\n};\n\nfunction ErrorForm(props) {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    0: name,\n    1: setName\n  } = useState(cookie.load('name') ? cookie.load('name') : '');\n  const {\n    0: email,\n    1: setEmail\n  } = useState(cookie.load('email') ? cookie.load('email') : '');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: phone,\n    1: setPhone\n  } = useState(cookie.load('phone') ? cookie.load('phone') : '');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: browser,\n    1: setBrowser\n  } = useState(deviceInfo.browser);\n  const {\n    0: device,\n    1: setDevice\n  } = useState(deviceInfo.device);\n  const {\n    0: operatingsystem,\n    1: setOs\n  } = useState(deviceInfo.os);\n  const {\n    0: othererror,\n    1: setOtherInput\n  } = useState('');\n  const {\n    0: rend,\n    1: setRend\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: shown,\n    1: setShown\n  } = useState(cookie.load('name') ? false : true);\n  const {\n    0: showe,\n    1: setShowe\n  } = useState(cookie.load('email') ? false : true);\n  const {\n    0: showp,\n    1: setShowp\n  } = useState(cookie.load('phone') ? false : true);\n  const {\n    0: tabIndex,\n    1: setTabIndex\n  } = useState(0);\n  const {\n    0: activeButton,\n    1: setActiveButton\n  } = useState(deviceInfo.device);\n  const {\n    0: screenWidth,\n    1: setScreenWidth\n  } = useState(1000);\n  let form = {\n    name: name,\n    email: email,\n    description: description,\n    contactNumber: phone,\n    error: othererror ? othererror : error,\n    browser: browser,\n    device: device,\n    operatingSystem: operatingsystem\n  };\n  const {\n    0: isLoading,\n    1: loadingState\n  } = useState(false);\n  const {\n    0: formResponse,\n    1: setResponse\n  } = useState('');\n\n  const onChange = event => {\n    const target = event.target;\n    const fieldname = target.name;\n    const value = target.value;\n\n    switch (fieldname) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'errortype':\n        setError(value);\n        break;\n\n      case 'operatingsystem':\n        setOs(value);\n        break;\n\n      case 'browser':\n        setBrowser(value);\n        break;\n\n      case 'othererror':\n        setOtherInput(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleToggle = param => {\n    setShow(param);\n    setRend(param);\n    setOtherInput('');\n  };\n\n  const refreshForm = res => {\n    loadingState(false);\n    console.log(res);\n    setCookies();\n    setResponse(res);\n    setResponse('');\n    setName(cookie.load('name') ? cookie.load('name') : '');\n    setEmail(cookie.load('email') ? cookie.load('email') : '');\n    setDescription('');\n    setPhone(cookie.load('phone') ? cookie.load('phone') : '');\n    setDevice(deviceInfo.device);\n    setBrowser(deviceInfo.browser);\n    setOs(deviceInfo.os);\n    setActiveButton(deviceInfo.device);\n    setError('');\n    setOtherInput('');\n    setShow(false);\n\n    if (res.status == 200) {\n      onClose();\n    }\n\n    setTabIndex(0);\n  };\n\n  const handleTabsChange = index => {\n    setTabIndex(index);\n  };\n\n  const formClose = () => {\n    setResponse('');\n    setName('');\n    setEmail('');\n    setDescription('');\n    setPhone('');\n    setDevice(deviceInfo.device);\n    setBrowser(deviceInfo.browser);\n    setOs(deviceInfo.os);\n    setActiveButton(deviceInfo.device);\n    setError('');\n    setOtherInput('');\n    setShow(false);\n    onClose();\n    setTabIndex(0);\n  };\n\n  const setCookies = () => {\n    cookie.save(\"name\", name, {\n      path: \"/\"\n    });\n    cookie.save(\"email\", email, {\n      path: \"/\"\n    });\n    cookie.save(\"phone\", phone, {\n      path: \"/\"\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    loadingState(true);\n    axios.post('/api/report/submit', form).then(response => refreshForm(response), error => refreshForm(error));\n  };\n\n  const updateWidth = () => {\n    setScreenWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    mx: 4,\n    variant: \"unstyled\",\n    onClick: onOpen,\n    colorScheme: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Report an Error\"), __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: formClose,\n    isCentered: screenWidth > 420 ? true : false,\n    scrollBehavior: screenWidth > 420 ? \"inside\" : \"outside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), __jsx(ModalContent, {\n    maxWidth: [\"430px\", \"430px\", \"600px\", \"700px\"],\n    maxHeight: screenWidth > 420 ? \"700px\" : \"\",\n    minHeight: screenWidth > 420 ? \"\" : \"100vh\",\n    mb: screenWidth <= 420 ? 0 : \"\",\n    mt: screenWidth <= 420 ? 0 : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(ModalHeader, {\n    style: {\n      zIndex: \"3\",\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    verticalAlign: \"middle\",\n    leftIcon: __jsx(FaArrowLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 66\n      }\n    }),\n    color: \"primary.500\",\n    variant: \"link\",\n    onClick: formClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }), __jsx(\"span\", {\n    className: \"display5 mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Report an Error\")), __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    className: \"reportanerror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"_redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }), __jsx(Tabs, {\n    index: tabIndex,\n    onChange: handleTabsChange,\n    isFitted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, __jsx(Tab, {\n    paddingX: [\"2px\", \"4px\", \"16px\"],\n    fontSize: [\"sm\", \"md\"],\n    className: \"display6 tab-selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center button-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 138\n    }\n  }, \"Type of error\"), \" \"), __jsx(Tab, {\n    paddingX: [\"2px\", \"8px\", \"16px\"],\n    fontSize: [\"sm\", \"md\"],\n    className: \"display6 tab-selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center button-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 138\n    }\n  }, \"Device Details\")), __jsx(Tab, {\n    paddingX: [\"2px\", \"4px\", \"16px\"],\n    fontSize: [\"sm\", \"md\"],\n    className: \"display6 tab-selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center button-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 138\n    }\n  }, \"Description\"))), __jsx(TabPanels, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }, __jsx(FormControl, {\n    mt: 10,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 49\n    }\n  }, \"Type of error:\"), __jsx(RadioGroup, {\n    name: \"errortype\",\n    onChange: onChange,\n    defaultValue: form.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 49\n    }\n  }, __jsx(Radio, {\n    value: \"Page not responsive\",\n    onClick: () => handleToggle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 53\n    }\n  }, __jsx(Box, {\n    fontSize: [\"md\", \"lg\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 124\n    }\n  }, \"Page not responsive\")), __jsx(Radio, {\n    value: \"Component not working\",\n    onClick: () => handleToggle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 53\n    }\n  }, __jsx(Box, {\n    fontSize: [\"md\", \"lg\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 126\n    }\n  }, \"Component not working\")), __jsx(Radio, {\n    value: \"Site not loading properly\",\n    onClick: () => handleToggle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 53\n    }\n  }, __jsx(Box, {\n    fontSize: [\"md\", \"lg\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 130\n    }\n  }, \"Site not loading properly\")), __jsx(Radio, {\n    value: \"Some Other Error\",\n    onClick: () => handleToggle(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 53\n    }\n  }, __jsx(Box, {\n    fontSize: [\"md\", \"lg\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 120\n    }\n  }, \"Other\")))), rend && __jsx(Collapse, {\n    isOpen: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 54\n    }\n  }, __jsx(FormControl, {\n    mt: 3,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 49\n    }\n  }, __jsx(Input, {\n    value: form.othererror,\n    variant: \"flushed\",\n    name: \"othererror\",\n    placeholder: \"Please specify if any other error\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 53\n    }\n  }))), __jsx(Button, {\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\",\n    mt: 8,\n    mb: 8,\n    onClick: () => setTabIndex(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, \"Next\")), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, __jsx(FormControl, {\n    mt: 10,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, \"Device you were using:\"), __jsx(RadioButtonGroup, {\n    isInline: true,\n    spacing: 4,\n    name: \"devicetype\",\n    value: form.device,\n    onChange: value => {\n      setDevice(value);\n      setActiveButton(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 49\n    }\n  }, __jsx(CustomRadio, {\n    mt: [2, 2, 0],\n    className: \"col-sm-3 \",\n    value: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 118\n    }\n  }, __jsx(SVG, {\n    color: activeButton === \"mobile\" ? \"light.500\" : \"black.500\",\n    src: \"/assets/images/icons/library/devices/iphone-x.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 154\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 279\n    }\n  }, \"Phone\"))), __jsx(CustomRadio, {\n    mt: [2, 2, 0],\n    className: \"col-sm-3 \",\n    value: \"tablet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 118\n    }\n  }, __jsx(SVG, {\n    color: activeButton === \"tablet\" ? \"light.500\" : \"black.500\",\n    src: \"/assets/images/icons/library/devices/tablet.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 154\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 277\n    }\n  }, \"Tablet\"))), __jsx(CustomRadio, {\n    mt: [2, 2, 0],\n    className: \"col-sm-3 \",\n    value: \"browser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 119\n    }\n  }, __jsx(SVG, {\n    color: activeButton === \"browser\" ? \"light.500\" : \"black.500\",\n    src: \"/assets/images/icons/library/devices/imac.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 155\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 277\n    }\n  }, \"PC\"))))), __jsx(FormControl, {\n    mt: 10,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 49\n    }\n  }, \"Browser you were using:\"), __jsx(Select, {\n    name: \"browser\",\n    value: form.browser,\n    onChange: onChange,\n    variant: \"flushed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 49\n    }\n  }, \"                     \", deviceList.browsers.map(item => __jsx(\"option\", {\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 185\n    }\n  }, item)))), __jsx(FormControl, {\n    mt: 10,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 49\n    }\n  }, \"Operating system you were using:\"), __jsx(Input, {\n    list: \"os\",\n    listStylePos: \"inside\",\n    name: \"operatingsystem\",\n    value: form.operatingSystem,\n    onChange: onChange,\n    variant: \"flushed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 49\n    }\n  }), __jsx(\"datalist\", {\n    id: \"os\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 49\n    }\n  }, deviceList.os.map(item => __jsx(\"option\", {\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 80\n    }\n  })))), __jsx(Button, {\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\",\n    mt: 8,\n    mb: 8,\n    onClick: () => setTabIndex(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 45\n    }\n  }, \"Next\")), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 41\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 49\n    }\n  }, \"Name:\", !shown && __jsx(Text, {\n    onClick: () => {\n      setShown(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 91\n    }\n  }, name)), shown ? __jsx(Input, {\n    variant: \"flushed\",\n    type: \"text\",\n    name: \"name\",\n    value: form.name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 58\n    }\n  }) : ''), __jsx(Box, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 49\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 53\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 57\n    }\n  }, \"Email:\", !showe && __jsx(Text, {\n    onClick: () => {\n      setShowe(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 101\n    }\n  }, email)), showe ? __jsx(Input, {\n    variant: \"flushed\",\n    type: \"email\",\n    name: \"email\",\n    value: form.email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 66\n    }\n  }) : '')), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 53\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 57\n    }\n  }, \"Contact No:\", !showp && __jsx(Text, {\n    onClick: () => {\n      setShowp(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 106\n    }\n  }, phone)), showp ? __jsx(Input, {\n    type: \"tel\",\n    pattern: \"[0-9]{10}\",\n    variant: \"flushed\",\n    name: \"phone\",\n    value: form.contactNumber,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 66\n    }\n  }) : ''))), __jsx(FormControl, {\n    mt: 10,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 49\n    }\n  }, \"Describe the error in detail:\"), __jsx(Textarea, {\n    resize: \"vertical\",\n    variant: \"flushed\",\n    size: \"lg\",\n    name: \"description\",\n    value: form.description,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 45\n    }\n  }, __jsx(Button, {\n    mt: 10,\n    mb: 8,\n    type: \"submit\",\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 49\n    }\n  }, \"Submit\", isLoading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"1s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 70\n    }\n  })))))))), formResponse && __jsx(Toast, {\n    response: formResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 42\n    }\n  })))));\n}\n\nexport default ErrorForm;","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/components/ReportanError/main.jsx"],"names":["React","useState","FormControl","FormLabel","Input","Button","ModalContent","ModalHeader","Spinner","Modal","ModalOverlay","Textarea","Tabs","TabPanels","TabList","TabPanel","Tab","Select","Box","Radio","RadioButtonGroup","RadioGroup","Collapse","ModalBody","Text","deviceList","Toast","useDisclosure","deviceType","browserName","osName","SVG","axios","cookie","FaArrowLeft","CustomRadio","forwardRef","props","ref","isChecked","rest","deviceInfo","browser","os","device","ErrorForm","isOpen","onOpen","onClose","name","setName","load","email","setEmail","description","setDescription","phone","setPhone","error","setError","setBrowser","setDevice","operatingsystem","setOs","othererror","setOtherInput","rend","setRend","show","setShow","shown","setShown","showe","setShowe","showp","setShowp","tabIndex","setTabIndex","activeButton","setActiveButton","screenWidth","setScreenWidth","form","contactNumber","operatingSystem","isLoading","loadingState","formResponse","setResponse","onChange","event","target","fieldname","value","handleToggle","param","refreshForm","res","console","log","setCookies","status","handleTabsChange","index","formClose","save","path","onSubmit","preventDefault","post","then","response","updateWidth","window","innerWidth","useEffect","addEventListener","removeEventListener","zIndex","position","top","backgroundColor","browsers","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    FormControl, FormLabel, Input, Button, ModalContent, ModalHeader, Spinner, Modal, ModalOverlay, Textarea, Tabs, TabPanels, TabList, TabPanel, Tab, Select, Box, Radio, RadioButtonGroup, RadioGroup, Collapse, ModalBody, Text\r\n} from \"@chakra-ui/react\";\r\nimport deviceList from '../../deviceDetect.js';\r\nimport Toast from '../Toast/main';\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport { deviceType, browserName, osName } from \"react-device-detect\";\r\nimport SVG from '../svg/SVG';\r\nimport axios from \"axios\";\r\nimport cookie from 'react-cookies'\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nconst CustomRadio = React.forwardRef((props, ref) => {\r\n    const { isChecked, ...rest } = props;\r\n    return (\r\n        <Button\r\n            ref={ref}\r\n            colorScheme={isChecked ? \"red\" : \"gray\"}\r\n            color={isChecked ? \"light.500\" : 'black.500'}\r\n            aria-checked={isChecked}\r\n            role=\"radio\"\r\n            height=\"120px\"\r\n            {...rest}\r\n        />\r\n    );\r\n});\r\n\r\nconst deviceInfo = {\r\n    browser: browserName,\r\n    os: osName,\r\n    device: deviceType\r\n}\r\nfunction ErrorForm(props) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [name, setName] = useState(cookie.load('name') ? cookie.load('name') : '');\r\n    const [email, setEmail] = useState(cookie.load('email') ? cookie.load('email') : '');\r\n    const [description, setDescription] = useState('');\r\n    const [phone, setPhone] = useState(cookie.load('phone') ? cookie.load('phone') : '');\r\n    const [error, setError] = useState('');\r\n    const [browser, setBrowser] = useState(deviceInfo.browser);\r\n    const [device, setDevice] = useState(deviceInfo.device);\r\n    const [operatingsystem, setOs] = useState(deviceInfo.os);\r\n    const [othererror, setOtherInput] = useState('');\r\n    const [rend, setRend] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [shown, setShown] = useState(cookie.load('name') ? false : true);\r\n    const [showe, setShowe] = useState(cookie.load('email') ? false : true);\r\n    const [showp, setShowp] = useState(cookie.load('phone') ? false : true);\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [activeButton, setActiveButton] = useState(deviceInfo.device);\r\n    const [screenWidth, setScreenWidth] = useState(1000);\r\n    let form = {\r\n        name: name,\r\n        email: email,\r\n        description: description,\r\n        contactNumber: phone,\r\n        error: othererror ? othererror : error,\r\n        browser: browser,\r\n        device: device,\r\n        operatingSystem: operatingsystem\r\n    }\r\n    const [isLoading, loadingState] = useState(false);\r\n    const [formResponse, setResponse] = useState('');\r\n    const onChange = (event) => {\r\n        const target = event.target\r\n        const fieldname = target.name\r\n        const value = target.value\r\n        switch (fieldname) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'description':\r\n                setDescription(value);\r\n                break;\r\n\r\n            case 'phone':\r\n                setPhone(value);\r\n                break;\r\n\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n\r\n            case 'errortype':\r\n                setError(value);\r\n                break;\r\n\r\n            case 'operatingsystem':\r\n                setOs(value);\r\n                break;\r\n\r\n            case 'browser':\r\n                setBrowser(value);\r\n                break;\r\n\r\n            case 'othererror':\r\n                setOtherInput(value);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleToggle = (param) => {\r\n        setShow(param);\r\n        setRend(param);\r\n        setOtherInput('');\r\n    }\r\n    const refreshForm = (res) => {\r\n        loadingState(false)\r\n        console.log(res);\r\n        setCookies();\r\n        setResponse(res);\r\n        setResponse('');\r\n        setName(cookie.load('name') ? cookie.load('name') : '');\r\n        setEmail(cookie.load('email') ? cookie.load('email') : '');\r\n        setDescription('');\r\n        setPhone(cookie.load('phone') ? cookie.load('phone') : '');\r\n        setDevice(deviceInfo.device);\r\n        setBrowser(deviceInfo.browser);\r\n        setOs(deviceInfo.os);\r\n        setActiveButton(deviceInfo.device);\r\n        setError('');\r\n        setOtherInput('');\r\n        setShow(false);\r\n        if (res.status == 200) {\r\n            onClose();\r\n        }\r\n        setTabIndex(0);\r\n    }\r\n    const handleTabsChange = index => {\r\n        setTabIndex(index);\r\n    };\r\n    const formClose = () => {\r\n        setResponse('');\r\n        setName('');\r\n        setEmail('');\r\n        setDescription('');\r\n        setPhone('');\r\n        setDevice(deviceInfo.device);\r\n        setBrowser(deviceInfo.browser);\r\n        setOs(deviceInfo.os);\r\n        setActiveButton(deviceInfo.device);\r\n        setError('');\r\n        setOtherInput('');\r\n        setShow(false);\r\n        onClose();\r\n        setTabIndex(0);\r\n    }\r\n    const setCookies = () => {\r\n        cookie.save(\"name\", name, { path: \"/\" });\r\n        cookie.save(\"email\", email, { path: \"/\" });\r\n        cookie.save(\"phone\", phone, { path: \"/\" });\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        loadingState(true);\r\n        axios.post('/api/report/submit', form)\r\n            .then((response) => refreshForm(response), error => refreshForm(error))\r\n    }\r\n    const updateWidth = () => {\r\n        setScreenWidth(window.innerWidth);\r\n    };\r\n    React.useEffect(() => {\r\n        updateWidth();\r\n        window.addEventListener(\"resize\", updateWidth);\r\n        return () => window.removeEventListener(\"resize\", updateWidth);\r\n    });\r\n    return (\r\n        <>\r\n            <Button mx={4} variant=\"unstyled\" onClick={onOpen} colorScheme=\"white\">Report an Error</Button>\r\n            <Modal isOpen={isOpen} onClose={formClose} isCentered={screenWidth > 420 ? true : false} scrollBehavior={screenWidth > 420 ? \"inside\" : \"outside\"}>\r\n                <ModalOverlay />\r\n                <ModalContent maxWidth={[\"430px\", \"430px\", \"600px\", \"700px\"]} maxHeight={screenWidth > 420 ? \"700px\" : \"\"} minHeight={screenWidth > 420 ? \"\" : \"100vh\"} mb={screenWidth <= 420 ? 0 : \"\"} mt={screenWidth <= 420 ? 0 : \"\"}>\r\n                    <ModalHeader style={{ zIndex: \"3\", position: \"sticky\", top: 0, backgroundColor: \"white\" }}>\r\n                        <Button verticalAlign=\"middle\" leftIcon={<FaArrowLeft />} color=\"primary.500\" variant=\"link\" onClick={formClose}></Button>\r\n                        <span className=\"display5 mx-2\">Report an Error</span></ModalHeader>\r\n                    <ModalBody>\r\n                        <Box className=\"reportanerror\">\r\n                            <form onSubmit={onSubmit}>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"_redirect\"\r\n                                />\r\n                                <Tabs index={tabIndex} onChange={handleTabsChange} isFitted>\r\n                                    <TabList>\r\n                                        <Tab paddingX={[\"2px\", \"4px\", \"16px\"]} fontSize={[\"sm\", \"md\"]} className=\"display6 tab-selected\"><div className=\"d-flex align-items-center button-tab\">Type of error</div> </Tab>\r\n                                        <Tab paddingX={[\"2px\", \"8px\", \"16px\"]} fontSize={[\"sm\", \"md\"]} className=\"display6 tab-selected\"><div className=\"d-flex align-items-center button-tab\">Device Details</div></Tab>\r\n                                        <Tab paddingX={[\"2px\", \"4px\", \"16px\"]} fontSize={[\"sm\", \"md\"]} className=\"display6 tab-selected\"><div className=\"d-flex align-items-center button-tab\">Description</div></Tab>\r\n                                    </TabList>\r\n                                    <TabPanels className=\"container\">\r\n                                        <TabPanel>\r\n                                            <FormControl mt={10} isRequired>\r\n                                                <FormLabel htmlFor=\"name\">Type of error:</FormLabel>\r\n                                                <RadioGroup name=\"errortype\" onChange={onChange} defaultValue={form.error}>\r\n                                                    <Radio value=\"Page not responsive\" onClick={() => handleToggle(false)}><Box fontSize={[\"md\", \"lg\"]}>Page not responsive</Box></Radio>\r\n                                                    <Radio value=\"Component not working\" onClick={() => handleToggle(false)}><Box fontSize={[\"md\", \"lg\"]}>Component not working</Box></Radio>\r\n                                                    <Radio value=\"Site not loading properly\" onClick={() => handleToggle(false)}><Box fontSize={[\"md\", \"lg\"]}>Site not loading properly</Box></Radio>\r\n                                                    <Radio value=\"Some Other Error\" onClick={() => handleToggle(true)}><Box fontSize={[\"md\", \"lg\"]}>Other</Box></Radio>\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                            {rend && <Collapse isOpen={show}>\r\n                                                <FormControl mt={3} isRequired>\r\n                                                    <Input value={form.othererror} variant=\"flushed\" name=\"othererror\" placeholder=\"Please specify if any other error\" onChange={onChange}>\r\n                                                    </Input>\r\n                                                </FormControl>\r\n                                            </Collapse>}\r\n                                            <Button size=\"lg\" colorScheme=\"primary\" className=\"primary-btn\" mt={8} mb={8} onClick={() => setTabIndex(1)}>Next</Button>\r\n                                        </TabPanel>\r\n                                        <TabPanel>\r\n                                            <FormControl mt={10} isRequired>\r\n                                                <FormLabel>Device you were using:</FormLabel>\r\n                                                <RadioButtonGroup isInline spacing={4} name=\"devicetype\" value={form.device} onChange={value => { setDevice(value); setActiveButton(value) }}>\r\n                                                    <CustomRadio mt={[2, 2, 0]} className=\"col-sm-3 \" value=\"mobile\"><div className=\"d-flex flex-column\"><SVG color={activeButton === \"mobile\" ? \"light.500\" : \"black.500\"} src=\"/assets/images/icons/library/devices/iphone-x.svg\" /><div>Phone</div></div></CustomRadio>\r\n                                                    <CustomRadio mt={[2, 2, 0]} className=\"col-sm-3 \" value=\"tablet\"><div className=\"d-flex flex-column\"><SVG color={activeButton === \"tablet\" ? \"light.500\" : \"black.500\"} src=\"/assets/images/icons/library/devices/tablet.svg\" /><div>Tablet</div></div></CustomRadio>\r\n                                                    <CustomRadio mt={[2, 2, 0]} className=\"col-sm-3 \" value=\"browser\"><div className=\"d-flex flex-column\"><SVG color={activeButton === \"browser\" ? \"light.500\" : \"black.500\"} src=\"/assets/images/icons/library/devices/imac.svg\" /><div>PC</div></div></CustomRadio>\r\n                                                </RadioButtonGroup>\r\n                                            </FormControl>\r\n                                            <FormControl mt={10} isRequired>\r\n                                                <FormLabel>Browser you were using:</FormLabel>\r\n                                                <Select name=\"browser\" value={form.browser} onChange={onChange} variant=\"flushed\">                     {deviceList.browsers.map(item => <option value={item}>{item}</option>)}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <FormControl mt={10} isRequired>\r\n                                                <FormLabel>Operating system you were using:</FormLabel>\r\n                                                <Input list=\"os\" listStylePos=\"inside\" name=\"operatingsystem\" value={form.operatingSystem} onChange={onChange} variant=\"flushed\"></Input>\r\n                                                <datalist id=\"os\">\r\n                                                    {deviceList.os.map(item => <option value={item}></option>)}\r\n                                                </datalist>\r\n                                            </FormControl>\r\n                                            <Button size=\"lg\" colorScheme=\"primary\" className=\"primary-btn\" mt={8} mb={8} onClick={() => setTabIndex(2)}>Next</Button>\r\n                                        </TabPanel>\r\n                                        <TabPanel>\r\n                                            <FormControl isRequired mt={10} >\r\n                                                <FormLabel htmlFor=\"name\">Name:{!shown && <Text onClick={() => { setShown(true) }}>{name}</Text>}</FormLabel>\r\n                                                {shown ? <Input\r\n                                                    variant=\"flushed\"\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    value={form.name}\r\n                                                    onChange={onChange}\r\n                                                /> : ''}\r\n                                            </FormControl>\r\n                                            <Box className=\"row\" >\r\n                                                <div className=\"col-md-6\">\r\n                                                    <FormControl isRequired mt={10}>\r\n                                                        <FormLabel htmlFor=\"email\">Email:{!showe && <Text onClick={() => { setShowe(true) }}>{email}</Text>}</FormLabel>\r\n                                                        {showe ? <Input\r\n                                                            variant=\"flushed\"\r\n                                                            type=\"email\"\r\n                                                            name=\"email\"\r\n                                                            value={form.email}\r\n                                                            onChange={onChange}\r\n                                                        /> : ''}\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <FormControl isRequired mt={10} >\r\n                                                        <FormLabel htmlFor=\"phone\">Contact No:{!showp && <Text onClick={() => { setShowp(true) }}>{phone}</Text>}</FormLabel>\r\n                                                        {showp ? <Input\r\n                                                            type=\"tel\"\r\n                                                            pattern=\"[0-9]{10}\"\r\n                                                            variant=\"flushed\"\r\n                                                            name=\"phone\"\r\n                                                            value={form.contactNumber}\r\n                                                            onChange={onChange}\r\n                                                        /> : ''}\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Box>\r\n                                            <FormControl mt={10} isRequired>\r\n                                                <FormLabel>Describe the error in detail:</FormLabel>\r\n                                                <Textarea\r\n                                                    resize={\"vertical\"}\r\n                                                    variant=\"flushed\"\r\n                                                    size=\"lg\"\r\n                                                    name=\"description\"\r\n                                                    value={form.description}\r\n                                                    onChange={onChange}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <div>\r\n                                                <Button\r\n                                                    mt={10}\r\n                                                    mb={8}\r\n                                                    type=\"submit\"\r\n                                                    size=\"lg\"\r\n                                                    colorScheme=\"primary\"\r\n                                                    className=\"primary-btn\"\r\n                                                >Submit{isLoading && <Spinner\r\n                                                    thickness=\"4px\"\r\n                                                    speed=\"1s\"\r\n                                                    emptyColor=\"gray.200\"\r\n                                                    color=\"blue.500\"\r\n                                                    size=\"sm\"\r\n                                                />}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </TabPanel>\r\n                                    </TabPanels>\r\n                                </Tabs>\r\n                            </form>\r\n                        </Box>\r\n                        {formResponse && <Toast response={formResponse} />}\r\n                    </ModalBody>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default ErrorForm;"]},"metadata":{},"sourceType":"module"}