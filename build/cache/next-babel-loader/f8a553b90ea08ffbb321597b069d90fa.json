{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Image, Flex, Avatar, Box, Text, Heading, Button } from \"@chakra-ui/react\";\nimport { useRouter } from \"next/router\";\nimport Fade from 'react-reveal/Fade';\nimport blogs from \"../../database/newsroom\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Section from \"../../pageBuilder/Section\";\nimport Title from \"../../pageBuilder/Title\";\nimport Body from \"../../pageBuilder/Body\";\nimport { FaChevronRight } from \"react-icons/fa\"; //  Gets id of blog (bid) from url and use that bid to get blog content from BLOGS array.\n//  url basic : /blogs/bid\n//  example   : /blogs/covid-19\n\nfunction Blogs() {\n  const router = useRouter();\n  const {\n    bid\n  } = router.query; //get blog id from url\n\n  var blog = blogs.filter(blog => {\n    if (blog.link == bid) {\n      return blog;\n    }\n  })[0] || {\n    content: \"\"\n  }; //Filter and get the current blog object\n\n  const imgalt = blog.imgalt;\n  return __jsx(\"div\", {\n    className: \"article\"\n  }, __jsx(Head, null, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n  }), __jsx(\"meta\", {\n    httpEquiv: \"Content-Type\",\n    content: \"text/html; charset=utf-8\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: blog.description\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: blog.title,\n    key: \"title\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: blog.description,\n    key: \"description\"\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: blog.tags.map(x => x)\n  }), __jsx(\"title\", null, blog.title || \"\"), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"../assets/images/icons/favicon/bg.ico\",\n    type: \"image/x-icon\"\n  })), __jsx(Box, {\n    zIndex: \"10\",\n    pos: \"relative\",\n    bg: \"dark.500\"\n  }, __jsx(Image, {\n    position: \"absolute\",\n    height: \"100%\",\n    zIndex: \"0\",\n    top: 0,\n    left: 0,\n    opacity: \".3\",\n    objectFit: \"cover\",\n    width: \"100%\",\n    src: blog.image\n  }), __jsx(Fade, {\n    distance: \"5%\",\n    duration: 500,\n    top: true\n  }, __jsx(Section, {\n    position: \"relative\",\n    textAlign: \"center\",\n    color: \"white\",\n    py: [24, 32],\n    my: 0\n  }, __jsx(Link, {\n    href: `/newsroom?tab=${blog.category}`\n  }, __jsx(\"a\", null, __jsx(Heading, {\n    width: \"fit-content\",\n    rounded: 8,\n    zIndex: \"100\",\n    size: \"xs\",\n    textAlign: \"center\",\n    color: \"white\",\n    bg: \"primary.500\",\n    py: 1,\n    px: 2,\n    mb: 4\n  }, blog.category))), __jsx(Title, {\n    textAlign: \"left\",\n    zIndex: \"100\",\n    fontSize: [\"24px\", \"48px\"]\n  }, blog.title)))), __jsx(Section, {\n    mt: 6,\n    py: 0\n  }, __jsx(Flex, null, __jsx(Box, {\n    fontWeight: [\"400\"],\n    lineHeight: 1.6,\n    color: \"gray.700\",\n    width: [\"100%\", \"100%\", \"72%\"]\n  }, blog.overview && __jsx(Box, {\n    bg: \"gray.200\",\n    textAlign: \"center\",\n    my: 6,\n    rounded: 8,\n    p: 12\n  }, __jsx(Heading, {\n    size: \"md\"\n  }, \"Overview\"), __jsx(Text, {\n    mt: 4\n  }, blog.overview)), blog.solution && __jsx(Box, {\n    bg: \"dark.500\",\n    color: \"white\",\n    textAlign: \"center\",\n    my: 6,\n    rounded: 8,\n    p: 12\n  }, __jsx(Heading, {\n    size: \"md\"\n  }, \"Solution\"), __jsx(Text, {\n    mt: 4\n  }, blog.solution)), blog.content && blog.content.map((body, index) => __jsx(Body, _extends({\n    key: index\n  }, body)))), __jsx(Flex, {\n    width: [\"100%\", \"100%\", \"28%\"],\n    mt: 6,\n    display: [\"none\", \"none\", \"flex\"],\n    alignItems: \"center\",\n    direction: \"column\"\n  }, blog.logo && __jsx(Box, {\n    mb: 4,\n    borderRadius: 8,\n    mx: 8,\n    p: 12,\n    shadow: \"lg\"\n  }, __jsx(Image, {\n    w: \"100%\",\n    src: blog.logo\n  })), blog.sideContent && blog.sideContent.map((cont, index) => __jsx(Box, {\n    key: index,\n    mb: 4\n  }, cont)), __jsx(Box, {\n    minW: \"250px\",\n    width: [\"0%\", \"0%\", \"80%\"],\n    fontWeight: \"500\"\n  }, __jsx(Box, {\n    bg: \"dark.500\",\n    pos: \"relative\",\n    rounded: 8,\n    p: 8,\n    overflow: \"hidden\",\n    boxShadow: \"xl\",\n    height: \"100%\"\n  }, __jsx(Image, {\n    zIndex: \"0\",\n    opacity: \".7\",\n    className: \"bg-image\",\n    src: \"/assets/images/backgrounds/card.png\"\n  }), __jsx(Flex, {\n    height: \"100%\",\n    direction: \"column\",\n    justify: \"space-between\"\n  }, __jsx(Title, {\n    zIndex: \"10\",\n    textAlign: \"left\",\n    fontSize: \"3xl\",\n    color: \"white\"\n  }, \"Get Started\"), __jsx(Link, {\n    href: \"/solutions\"\n  }, __jsx(Button, {\n    mt: 8,\n    as: \"a\",\n    variant: \"solid\",\n    className: \"primary-btn\",\n    py: 4,\n    colorScheme: \"primary\",\n    rightIcon: __jsx(FaChevronRight, null),\n    size: \"md\"\n  }, \"Explore Solutions\")))))))));\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: blogs.map(x => ({\n      params: {\n        bid: x.link\n      }\n    })),\n    fallback: false // See the \"fallback\" section below\n\n  };\n}\nexport async function getStaticProps() {\n  return {\n    props: {}\n  };\n}\nexport default Blogs;","map":null,"metadata":{},"sourceType":"module"}