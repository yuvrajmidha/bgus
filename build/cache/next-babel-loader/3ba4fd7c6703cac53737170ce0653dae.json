{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@chakra-ui/react';\n\nfunction Row(_ref) {\n  let {\n    justify,\n    flexWrap = \"wrap\",\n    rowDistance\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"justify\", \"flexWrap\", \"rowDistance\"]);\n\n  return __jsx(Flex, _extends({\n    display: \"inline-flex\",\n    w: \"100%\",\n    mt: rowDistance,\n    flexWrap: flexWrap,\n    direction: props.direction,\n    justify: justify || \"center\"\n  }, props));\n}\n\nexport default Row;","map":null,"metadata":{},"sourceType":"module"}