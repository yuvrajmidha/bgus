{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"isChecked\", \"isDisabled\", \"value\"];\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Collapse, Slider, SliderThumb, SliderTrack, SliderFilledTrack, FormLabel, Switch, Flex, RadioGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Popover, PopoverBody, PopoverArrow, PopoverContent, PopoverTrigger, PopoverHeader } from \"@chakra-ui/react\";\nimport { PricingCard, PricingQuote } from \"../../components/cards/PricingCard\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaQuestion } from \"react-icons/fa\";\nvar CustomRadio = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var isChecked = props.isChecked,\n      isDisabled = props.isDisabled,\n      value = props.value,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return __jsx(Button, _extends({\n    className: \"my-1\",\n    fontSize: [\"13px\", \"14px\", \"16px\"],\n    ref: ref,\n    variant: isChecked ? \"solid\" : \"outline\",\n    colorScheme: isChecked ? \"primary\" : \"gray.300\",\n    \"aria-checked\": isChecked,\n    role: \"radio\",\n    isDisabled: isDisabled\n  }, rest));\n});\n\nfunction ContactCenterPricing(props) {\n  var features = [\"Includes 5 CSQ\", \"Connectivity to end customer*\", \"Complete Call Recording\", \"On-Demand Call Recording\", \"Fully Managed Service\"];\n\n  var verifyNotEmpty = function verifyNotEmpty(x, text) {\n    return x > 0 ? \", \" + x + \" \" + text : \"\";\n  };\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      planIndex = _React$useState2[0],\n      setPlanIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      planName = _React$useState4[0],\n      setPlanName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      RDSType = _React$useState6[0],\n      setRDSType = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      wfm = _React$useState8[0],\n      setWfm = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      complianceQM = _React$useState10[0],\n      setComplianceQM = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      advancedQM = _React$useState12[0],\n      setAdvancedQM = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      failOverNode = _React$useState14[0],\n      setFailOverNode = _React$useState14[1];\n\n  var handleFailOverNode = function handleFailOverNode(failOverNode) {\n    return failOverNode ? \",Add Fail-Over Node\" : \"\";\n  };\n\n  var _React$useState15 = React.useState(1),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      value = _React$useState16[0],\n      setValue = _React$useState16[1];\n\n  var handleChange = function handleChange(value) {\n    return setValue(value);\n  };\n\n  var _React$useState17 = React.useState(1),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      tbSpace = _React$useState18[0],\n      setTbSpace = _React$useState18[1];\n\n  var handleTbSpace = function handleTbSpace(tbSpace) {\n    return setTbSpace(tbSpace);\n  };\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      show = _React$useState20[0],\n      setShow = _React$useState20[1];\n\n  var openControls = function openControls() {\n    setShow(true);\n    window.scrollTo(0, document.getElementById(\"collapse-1\").offsetTop - 100);\n  };\n\n  return __jsx(\"div\", {\n    id: \"pricing\",\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row no-gutters px-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Standard\",\n    icon: \"/assets/images/icons/theme/origami.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: function onClick() {\n      openControls();\n      setPlanName(\"CAGENT Standard Plan\");\n      setPlanIndex(1);\n      setWfm(0);\n      setAdvancedQM(0);\n      setComplianceQM(0);\n    }\n  }, \"View Options\"))), __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Professional\",\n    icon: \"/assets/images/icons/theme/paper-plane.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: function onClick() {\n      openControls();\n      setPlanName(\"CAGENT Professional Plan\");\n      setPlanIndex(2);\n      setRDSType(\"\");\n      setValue(0);\n      setTbSpace(0);\n      setFailOverNode(false);\n    }\n  }, \"View Options\"))), __jsx(\"div\", {\n    className: \"col-lg-4 my-3\"\n  }, __jsx(PricingCard, {\n    title: \"Business\",\n    icon: \"/assets/images/icons/theme/airplane.svg\",\n    featureList: features\n  }, __jsx(Button, {\n    className: \"mt-3\",\n    colorScheme: \"primary\",\n    variant: \"outline\",\n    size: \"lg\",\n    onClick: function onClick() {\n      openControls();\n      setPlanName(\"CAGENT Business Plan\");\n      setPlanIndex(3);\n      setRDSType(\"\");\n      setValue(0);\n      setTbSpace(0);\n      setFailOverNode(false);\n    }\n  }, \"View Options\")))), __jsx(\"div\", null, __jsx(\"div\", {\n    id: \"collapse-1\"\n  }, __jsx(Collapse, {\n    className: \"px-lg-5\",\n    mt: 6,\n    in: show\n  }, __jsx(\"div\", {\n    className: \"px-4 py-5 border\"\n  }, __jsx(\"div\", {\n    className: \"display5 text-center\"\n  }, planName), __jsx(\"div\", {\n    className: \"row justify-content-between px-3\"\n  }, planIndex === 1 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Additional CSQ\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    max: 30,\n    defaultValue: 1,\n    value: value,\n    onChange: handleChange\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: value\n  }))), __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-2\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Choose a type\"), __jsx(RadioGroup, {\n    onChange: function onChange(value) {\n      return setRDSType(value);\n    },\n    mt: 4,\n    isInline: true\n  }, __jsx(CustomRadio, {\n    value: \",RDS SERVER WITH CAD\"\n  }, \"RDS SERVER WITH CAD\"), __jsx(CustomRadio, {\n    value: \",RDS SERVER WITH TOOLS\"\n  }, \"RDS SERVER WITH TOOLS\"), __jsx(CustomRadio, {\n    value: \",RDS SERVER CALL RECORDING\"\n  }, \"RDS SERVER CALL RECORDING\"))), __jsx(\"div\", {\n    className: \"col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"TB Space\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    max: 30,\n    defaultValue: 1,\n    value: tbSpace,\n    onChange: handleTbSpace\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: tbSpace\n  }))), __jsx(\"div\", {\n    className: \"my-1 col-lg-10 offset-lg-1 mt-3 d-flex justify-content-between\"\n  }, __jsx(Flex, {\n    py: \"12px\",\n    justify: \"left\",\n    width: \"100%\",\n    align: \"center\"\n  }, __jsx(Switch, {\n    onChange: function onChange(e) {\n      setFailOverNode(e.target.checked);\n    },\n    color: \"primary\",\n    mb: 0,\n    id: \"failOverNode\"\n  }), __jsx(FormLabel, {\n    mb: 0,\n    ml: \"12px\",\n    htmlFor: \"fail-over node\"\n  }, \"Add Fail-Over Node\")))), (planIndex === 2 || planIndex === 3) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"my-1 col-lg-10 offset-lg-1 mt-4\"\n  }, __jsx(\"div\", {\n    className: \"h6\"\n  }, \"WFM\"), __jsx(Slider, {\n    color: \"primary\",\n    my: \"24px\",\n    defaultValue: 0,\n    max: \"64\",\n    value: wfm,\n    onChange: setWfm\n  }, __jsx(SliderTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  }, __jsx(SliderFilledTrack, {\n    h: \"16px\",\n    borderRadius: \"8px\"\n  })), __jsx(SliderThumb, {\n    className: \"shadow-md\",\n    fontSize: \"md\",\n    fontWeight: \"800\",\n    width: \"auto\",\n    padding: \"8px\",\n    height: \"32px\",\n    children: wfm\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 text-center justify-content-center text-secondary\"\n  }, \"(The sum value of Advance QM and Compliance QM cannot be greater than WFM)\"), __jsx(\"div\", {\n    className: \"my-1 col-lg-4 offset-lg-1 mt-4 pl-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, \" \", __jsx(\"div\", {\n    className: \"h6\"\n  }, \"ADVANCED QM\"), \" \", __jsx(Popover, {\n    usePortal: true,\n    trigger: \"hover\"\n  }, __jsx(PopoverTrigger, null, __jsx(FaQuestion, {\n    className: \"ml-2 pb-1 mb-2\",\n    size: \"28px\",\n    color: \"primary.500\"\n  })), __jsx(PopoverContent, {\n    zIndex: 4\n  }, __jsx(PopoverArrow, null), __jsx(PopoverHeader, {\n    className: \"h6\"\n  }, \"Advanced QM\"), __jsx(PopoverBody, null, \"Advanced Quality Management solution gives you the tools to continuously measure and monitor agent performance, assess the quality and depth of your customer interactions, and drive constant improvement. In essence, an effective contact center quality management program is directly connected to the success of your business.\"))), \" \"), __jsx(NumberInput, {\n    maxWidth: \"200px\",\n    min: 0,\n    max: wfm - complianceQM,\n    value: advancedQM,\n    onChange: function onChange(value) {\n      value <= wfm - complianceQM ? setAdvancedQM(value) : setAdvancedQM(wfm - complianceQM);\n    }\n  }, __jsx(NumberInputField, {\n    className: \"bg-light\"\n  }), __jsx(NumberInputStepper, null, __jsx(NumberIncrementStepper, null), __jsx(NumberDecrementStepper, null)))), __jsx(\"div\", {\n    className: \"my-1 col-lg-4 mt-4 pr-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, \" \", __jsx(\"div\", {\n    className: \"h6\"\n  }, \"Compliance QM\"), \" \", __jsx(Popover, {\n    usePortal: true,\n    trigger: \"hover\"\n  }, __jsx(PopoverTrigger, null, __jsx(FaQuestion, {\n    className: \"ml-2 pb-1 mb-2\",\n    size: \"28px\",\n    color: \"primary.500\"\n  })), __jsx(PopoverContent, {\n    zIndex: 4\n  }, __jsx(PopoverArrow, null), __jsx(PopoverHeader, {\n    className: \"h6\"\n  }, \"Compliance QM\"), __jsx(PopoverBody, null, \"Quality Management or Monitoring combined automatically scored calls via speech analytics; reconfigured QM evaluation; agent self-evaluation; and direct customer feedback. Customers don\\u2019t want a \\u201Cmanaged\\u201D experience\\u2014they want a genuine experience and to speak to real people with real personalities. Call quality monitoring is all about refining agent behaviour and aligning it with business goals.\"))), \" \"), __jsx(NumberInput, {\n    maxWidth: \"200px\",\n    min: 0,\n    max: wfm - advancedQM,\n    value: complianceQM,\n    onChange: function onChange(value) {\n      value <= wfm - advancedQM ? setComplianceQM(value) : setComplianceQM(wfm - advancedQM);\n    }\n  }, __jsx(NumberInputField, {\n    className: \"bg-light\"\n  }), __jsx(NumberInputStepper, null, __jsx(NumberIncrementStepper, null), __jsx(NumberDecrementStepper, null))))), __jsx(\"div\", {\n    className: \"col-lg-12 mt-5 d-flex justify-content-center\"\n  }, __jsx(PricingQuote, {\n    serviceName: \"Contact Center As A Service\",\n    serviceDescription: \"\".concat(planName).concat(verifyNotEmpty(value, \"Additional CSQ\")).concat(RDSType).concat(verifyNotEmpty(tbSpace, \"TB Space\")).concat(verifyNotEmpty(wfm, \"WFM\")).concat(verifyNotEmpty(advancedQM, \"Advanced QM\")).concat(verifyNotEmpty(complianceQM, \"Compliance QM\")).concat(handleFailOverNode(failOverNode)),\n    button: true\n  }))))))));\n}\n\nexport default ContactCenterPricing;","map":null,"metadata":{},"sourceType":"module"}