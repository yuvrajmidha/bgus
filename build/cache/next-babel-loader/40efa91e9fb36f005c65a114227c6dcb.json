{"ast":null,"code":"var _jsxFileName = \"/Users/codbrixlabs/Desktop/Projects/bgus/src/components/contactForm/main.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormControl, Input, Button, Textarea, Spinner, Box, Flex } from \"@chakra-ui/react\";\nimport keys from '../../apiKeys';\nimport Toast from '../Toast/main';\nimport axios from \"axios\";\n\nfunction ContactForm(props) {\n  _s();\n\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: subject,\n    1: setSubject\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  let form = {\n    name: name,\n    email: email,\n    message: message,\n    contactNumber: phone,\n    subject: subject\n  };\n  const {\n    0: isLoading,\n    1: loadingState\n  } = useState(false);\n  const {\n    0: formResponse,\n    1: setResponse\n  } = useState('');\n\n  const onChange = event => {\n    const target = event.target;\n    const fieldname = target.name;\n    const value = target.value;\n\n    switch (fieldname) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'message':\n        setMessage(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'subject':\n        setSubject(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const refreshForm = res => {\n    loadingState(false);\n    console.log(res);\n    setResponse(res);\n    setResponse('');\n\n    if (res.status == 200) {\n      setTimeout(() => {\n        setName('');\n        setEmail('');\n        setMessage('');\n        setPhone('');\n        setSubject('');\n      }, 1000);\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    loadingState(true);\n    axios.post('/api/contact/submit', form).then(response => refreshForm(response), error => refreshForm(error));\n  };\n\n  return __jsx(Box, {\n    p: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"_redirect\",\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), __jsx(Flex, {\n    wrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    px: 2,\n    width: \"100%\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    placeholder: \"Name\",\n    type: \"text\",\n    p: 6,\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    px: 2,\n    width: [\"100%\", \"100%\", \"50%\"],\n    mt: 4,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    p: 6,\n    placeholder: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    px: 2,\n    width: [\"100%\", \"100%\", \"50%\"],\n    mt: 4,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    p: 6,\n    placeholder: \"Phone Number\",\n    type: \"tel\",\n    pattern: \"[0-9]{10}\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    px: 2,\n    width: \"100%\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    p: 6,\n    placeholder: \"Subject\",\n    name: \"subject\",\n    value: subject,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    px: 2,\n    width: \"100%\",\n    mt: 4,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(Textarea, {\n    p: 6,\n    placeholder: \"Message\",\n    height: \"220px\",\n    size: \"lg\",\n    name: \"message\",\n    value: message,\n    onChange: onChange,\n    resize: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    mt: 10,\n    type: \"submit\",\n    size: \"lg\",\n    colorScheme: \"primary\",\n    className: \"primary-btn\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Submit\", isLoading && __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"1s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 32\n    }\n  })))), formResponse && __jsx(Toast, {\n    response: formResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 24\n    }\n  }));\n}\n\n_s(ContactForm, \"UQe0kTpsTpEarHXX3L91NMqHK24=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/codbrixlabs/Desktop/Projects/bgus/src/components/contactForm/main.jsx"],"names":["React","useState","FormControl","Input","Button","Textarea","Spinner","Box","Flex","keys","Toast","axios","ContactForm","props","name","setName","email","setEmail","subject","setSubject","message","setMessage","phone","setPhone","form","contactNumber","isLoading","loadingState","formResponse","setResponse","onChange","event","target","fieldname","value","refreshForm","res","console","log","status","setTimeout","onSubmit","preventDefault","post","then","response","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  FormControl, Input, Button, Textarea, Spinner, Box, Flex\r\n} from \"@chakra-ui/react\";\r\nimport keys from '../../apiKeys';\r\nimport Toast from '../Toast/main';\r\nimport axios from \"axios\";\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  let form = {\r\n    name: name,\r\n    email: email,\r\n    message: message,\r\n    contactNumber: phone,\r\n    subject: subject\r\n  }\r\n  const [isLoading, loadingState] = useState(false);\r\n  const [formResponse, setResponse] = useState('');\r\n  const onChange = (event) => {\r\n    const target = event.target\r\n    const fieldname = target.name\r\n    const value = target.value\r\n    switch (fieldname) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'message':\r\n        setMessage(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      case 'subject':\r\n        setSubject(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const refreshForm = (res) => {\r\n    loadingState(false)\r\n    console.log(res);\r\n    setResponse(res);\r\n    setResponse('');\r\n    if (res.status == 200) {\r\n      setTimeout(() => {\r\n        setName('');\r\n        setEmail('');\r\n        setMessage('');\r\n        setPhone('');\r\n        setSubject('');\r\n      }, 1000);\r\n    }\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    loadingState(true);\r\n    axios.post('/api/contact/submit', form)\r\n      .then((response) => refreshForm(response), (error) => refreshForm(error))\r\n  }\r\n  return (\r\n    <Box p={5}>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"hidden\" name=\"_redirect\" value=\"false\" />\r\n        <Flex wrap=\"wrap\">\r\n          <FormControl px={2} width={\"100%\"} isRequired>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              type=\"text\"\r\n              p={6}\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={onChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl px={2} width={[\"100%\", \"100%\", \"50%\"]} mt={4} isRequired>\r\n            <Input\r\n              p={6}\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl px={2} width={[\"100%\", \"100%\", \"50%\"]} mt={4} isRequired>\r\n            <Input\r\n              p={6}\r\n              placeholder=\"Phone Number\"\r\n              type=\"tel\"\r\n              pattern=\"[0-9]{10}\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={onChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl px={2} width={\"100%\"} mt={4}>\r\n            <Input\r\n              p={6}\r\n              placeholder=\"Subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={onChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl px={2} width={\"100%\"} mt={4} isRequired>\r\n            <Textarea\r\n              p={6}\r\n              placeholder=\"Message\"\r\n              height=\"220px\"\r\n              size=\"lg\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={onChange}\r\n              resize={\"vertical\"}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            mt={10}\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            colorScheme=\"primary\"\r\n            className=\"primary-btn\"\r\n            width=\"100%\"\r\n          >Submit{isLoading && <Spinner\r\n            thickness=\"4px\"\r\n            speed=\"1s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"sm\"\r\n          />}\r\n          </Button>\r\n        </Flex>\r\n      </form>\r\n      {formResponse && <Toast response={formResponse} />}\r\n    </Box>\r\n  )\r\n}\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}